{
  "address": "0x4E14EA1CFbe4015f31C7F989f2e3a48FA6586097",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sAXIAL",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newExecutionDelay",
          "type": "uint256"
        }
      ],
      "name": "ExecutionDelayChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMinimumVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "MinimumVotingPeriodChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "support",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "name": "NewVote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "title",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "executor",
          "type": "address"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newProposalThreshold",
          "type": "uint256"
        }
      ],
      "name": "ProposalThresholdChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newQuorumVotes",
          "type": "uint256"
        }
      ],
      "name": "QuorumVotesChanges",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "EXECUTION_DELAY_MAXIMUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EXECUTION_DELAY_MINIMUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EXPIRATION_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROPOSAL_THRESHOLD_MAXIMUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROPOSAL_THRESHOLD_MINIMUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "QUORUM_VOTES_MAXIMUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "QUORUM_VOTES_MINIMUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VOTING_PERIOD_MAXIMUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VOTING_PERIOD_MINIMUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_labels",
          "type": "string[]"
        },
        {
          "internalType": "address[]",
          "name": "_targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "_data",
          "type": "bytes[]"
        }
      ],
      "name": "constructProposalExecutionContexts",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "label",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Governance.ProposalExecutionContext[]",
              "name": "contexts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Governance.ProposalExecutionContextList",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_metadata",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_votingPeriod",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isBoolean",
          "type": "bool"
        }
      ],
      "name": "constructProposalMetadata",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "executor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votingPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quorumVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "executionDelay",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "votes",
              "type": "uint256[]"
            },
            {
              "internalType": "bool",
              "name": "isBoolean",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "length",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "label",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "target",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Governance.ProposalExecutionContext[]",
                  "name": "contexts",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct Governance.ProposalExecutionContextList",
              "name": "executionContexts",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governance.Proposal",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executionDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposalVotes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "support",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votes",
              "type": "uint256"
            }
          ],
          "internalType": "struct Governance.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastProposalByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumVotingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "metadata",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votingPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quorumVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "executionDelay",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isBoolean",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "label",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Governance.ProposalExecutionContext[]",
              "name": "contexts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Governance.ProposalExecutionContextList",
          "name": "executionContexts",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "executor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votingPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quorumVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "executionDelay",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "votes",
              "type": "uint256[]"
            },
            {
              "internalType": "bool",
              "name": "isBoolean",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "length",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "label",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "target",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Governance.ProposalExecutionContext[]",
                  "name": "contexts",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct Governance.ProposalExecutionContextList",
              "name": "executionContexts",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governance.Proposal",
          "name": "_metaData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "label",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Governance.ProposalExecutionContext[]",
              "name": "contexts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Governance.ProposalExecutionContextList",
          "name": "_executionContexts",
          "type": "tuple"
        }
      ],
      "name": "propose",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "receipts",
      "outputs": [
        {
          "internalType": "bool",
          "name": "hasVoted",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "support",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sAXIAL",
      "outputs": [
        {
          "internalType": "contract IsAxial",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_seconds",
          "type": "uint256"
        }
      ],
      "name": "setExecutionDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_seconds",
          "type": "uint256"
        }
      ],
      "name": "setMinimumVotingPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_votes",
          "type": "uint256"
        }
      ],
      "name": "setProposalThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_votes",
          "type": "uint256"
        }
      ],
      "name": "setQuorumVotes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum Governance.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_support",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd455d794677103e76be7fee3b8babdc6a5b2bc4ff2b2aab4491cf3e295505d5f",
  "receipt": {
    "to": null,
    "from": "0x44A4b9E2A69d86BA382a511f845CbF2E31286770",
    "contractAddress": "0x4E14EA1CFbe4015f31C7F989f2e3a48FA6586097",
    "transactionIndex": 3,
    "gasUsed": "3099191",
    "logsBloom": "0x
    "blockHash": "0x0a8378575bae78d4e07769de764ddd12e740fc1e0b8fe728b94e73ac09abfb07",
    "transactionHash": "0xd455d794677103e76be7fee3b8babdc6a5b2bc4ff2b2aab4491cf3e295505d5f",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 9076453,
        "transactionHash": "0xd455d794677103e76be7fee3b8babdc6a5b2bc4ff2b2aab4491cf3e295505d5f",
        "address": "0x4E14EA1CFbe4015f31C7F989f2e3a48FA6586097",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000044a4b9e2a69d86ba382a511f845cbf2e31286770"
        ],
        "data": "0x",
        "logIndex": 8,
        "blockHash": "0x0a8378575bae78d4e07769de764ddd12e740fc1e0b8fe728b94e73ac09abfb07"
      }
    ],
    "blockNumber": 9076453,
    "cumulativeGasUsed": "3603026",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xb7819A8714fCa85239E4b881291819A79Aa703E4"
  ],
  "numDeployments": 5,
  "solcInputHash": "841a228791557e21deeba7011c2f0e0a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sAXIAL\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newExecutionDelay\",\"type\":\"uint256\"}],\"name\":\"ExecutionDelayChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinimumVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"MinimumVotingPeriodChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"name\":\"NewVote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newQuorumVotes\",\"type\":\"uint256\"}],\"name\":\"QuorumVotesChanges\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EXECUTION_DELAY_MAXIMUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXECUTION_DELAY_MINIMUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXPIRATION_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROPOSAL_THRESHOLD_MAXIMUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROPOSAL_THRESHOLD_MINIMUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUORUM_VOTES_MAXIMUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUORUM_VOTES_MINIMUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTING_PERIOD_MAXIMUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTING_PERIOD_MINIMUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_labels\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"_targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"constructProposalExecutionContexts\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Governance.ProposalExecutionContext[]\",\"name\":\"contexts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Governance.ProposalExecutionContextList\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_metadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_votingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isBoolean\",\"type\":\"bool\"}],\"name\":\"constructProposalMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quorumVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"votes\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"isBoolean\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Governance.ProposalExecutionContext[]\",\"name\":\"contexts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Governance.ProposalExecutionContextList\",\"name\":\"executionContexts\",\"type\":\"tuple\"}],\"internalType\":\"struct Governance.Proposal\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executionDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"internalType\":\"struct Governance.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastProposalByAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumVotingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quorumVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionDelay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isBoolean\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Governance.ProposalExecutionContext[]\",\"name\":\"contexts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Governance.ProposalExecutionContextList\",\"name\":\"executionContexts\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quorumVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"votes\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"isBoolean\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Governance.ProposalExecutionContext[]\",\"name\":\"contexts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Governance.ProposalExecutionContextList\",\"name\":\"executionContexts\",\"type\":\"tuple\"}],\"internalType\":\"struct Governance.Proposal\",\"name\":\"_metaData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Governance.ProposalExecutionContext[]\",\"name\":\"contexts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Governance.ProposalExecutionContextList\",\"name\":\"_executionContexts\",\"type\":\"tuple\"}],\"name\":\"propose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receipts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sAXIAL\",\"outputs\":[{\"internalType\":\"contract IsAxial\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seconds\",\"type\":\"uint256\"}],\"name\":\"setExecutionDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seconds\",\"type\":\"uint256\"}],\"name\":\"setMinimumVotingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_votes\",\"type\":\"uint256\"}],\"name\":\"setProposalThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_votes\",\"type\":\"uint256\"}],\"name\":\"setQuorumVotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum Governance.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_support\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"This token must not be tradeable\",\"params\":{\"_sAXIAL\":\"the address of the contract which determines each users voting power\"}},\"execute(uint256)\":{\"params\":{\"_proposalId\":\"the index of the proposal we wish to execute\"},\"returns\":{\"_0\":\"bytes array the executed function/s returned\"}},\"getReceipt(uint256,address)\":{\"params\":{\"_proposalId\":\"the index of the proposal we wish to view the receipt for\",\"_voter\":\"the user we wish to view the receipt for\"},\"returns\":{\"_0\":\"Receipt A copy of the voters selection for the provided proposal\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"propose((string,string,address,address,uint256,uint256,uint256,uint256,uint256[],bool,(uint256,(string,address,uint256,bytes)[])),(uint256,(string,address,uint256,bytes)[]))\":{\"params\":{\"_executionContexts\":\"Execution struct generated via constructExecutionContexts\",\"_metaData\":\"Metadata struct generated via constructProposalMetadata\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"state(uint256)\":{\"params\":{\"_proposalId\":\"the index of the proposal we wish to view the State of\"},\"returns\":{\"_0\":\"ProposalState enum representing the status of the selected proposal\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vote(uint256,uint256)\":{\"details\":\"If the proposal is binary, 0 means No and 1 means Yes\",\"params\":{\"_proposalId\":\"the index of the proposal the user wishes to vote for or against\",\"_support\":\"index of the option the user wishes to cast their vote for\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"EXPIRATION_PERIOD()\":{\"notice\":\"Seconds since the proposal could be executed until it is considered expired\"},\"constructor\":{\"notice\":\"Constructor\"},\"execute(uint256)\":{\"notice\":\"Allow any user to execute the proposal if it is in the execution stage\"},\"executionDelay()\":{\"notice\":\"Seconds since the end of the voting period before the proposal can be executed\"},\"minimumVotingPeriod()\":{\"notice\":\"Lower bound for the voting period\"},\"proposalCount()\":{\"notice\":\"The total number of proposals\"},\"proposalThreshold()\":{\"notice\":\"The minimum number of votes required for an account to create a proposal\"},\"proposals(uint256)\":{\"notice\":\"The record of all proposals ever proposed\"},\"propose((string,string,address,address,uint256,uint256,uint256,uint256,uint256[],bool,(uint256,(string,address,uint256,bytes)[])),(uint256,(string,address,uint256,bytes)[]))\":{\"notice\":\"Allows any user with sufficient priviledges to propose a new vote\"},\"quorumVotes()\":{\"notice\":\"The required minimum number of votes in support of a proposal for it to succeed\"},\"sAXIAL()\":{\"notice\":\"Non-tradeable sAXIAL used to represent votes\"},\"state(uint256)\":{\"notice\":\"View the current status of any proposal\"},\"vote(uint256,uint256)\":{\"notice\":\"Vote for selected option\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Governance.sol\":\"Governance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Governance.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\n/// @title A governance contract for proposals, voting, and execution\\n/// @author Auroter\\n/// @notice Uses the StakedAxial contract to determine users voting power\\n/// @notice Multiple executions can be included in a single yes/no proposal\\n/// @notice Multiple-choice proposals are also valid and can be used to select a specific execution context\\n\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n// import \\\"hardhat/console.sol\\\";\\n\\ninterface IsAxial {\\n  function balanceOf(address _account) external view returns (uint256);\\n}\\n\\ncontract Governance is ReentrancyGuard, Ownable {\\n\\n    /// @notice Lower bound for the voting period\\n    uint256 public minimumVotingPeriod = 3 days;\\n    uint256 public constant VOTING_PERIOD_MINIMUM = 1 days;\\n    uint256 public constant VOTING_PERIOD_MAXIMUM = 30 days;\\n\\n    /// @notice Seconds since the end of the voting period before the proposal can be executed\\n    uint256 public executionDelay = 24 hours;\\n    uint256 public constant EXECUTION_DELAY_MINIMUM = 30 seconds;\\n    uint256 public constant EXECUTION_DELAY_MAXIMUM = 30 days;\\n\\n    /// @notice Seconds since the proposal could be executed until it is considered expired\\n    uint256 public constant EXPIRATION_PERIOD = 14 days;\\n\\n    /// @notice The required minimum number of votes in support of a proposal for it to succeed\\n    uint256 public quorumVotes = 300_000;\\n    uint256 public constant QUORUM_VOTES_MINIMUM = 100_000;\\n    uint256 public constant QUORUM_VOTES_MAXIMUM = 18_000_000;\\n\\n    /// @notice The minimum number of votes required for an account to create a proposal\\n    uint256 public proposalThreshold = 100_000;\\n    uint256 public constant PROPOSAL_THRESHOLD_MINIMUM = 50_000;\\n    uint256 public constant PROPOSAL_THRESHOLD_MAXIMUM = 10_000_000;\\n\\n    /// @notice The total number of proposals\\n    uint256 public proposalCount;\\n\\n    /// @notice The record of all proposals ever proposed\\n    mapping(uint256 => Proposal) public proposals;\\n    mapping(uint256 => mapping(address => Receipt)) public receipts;\\n    mapping(address => uint256) public lastProposalByAddress;\\n\\n    /// @notice Non-tradeable sAXIAL used to represent votes\\n    IsAxial public sAXIAL;\\n\\n    struct Proposal {\\n        string title;\\n        string metadata;\\n        address proposer;\\n        address executor;\\n        uint256 startTime;\\n        uint256 votingPeriod;\\n        uint256 quorumVotes;\\n        uint256 executionDelay;\\n        uint256[] votes;\\n        bool isBoolean;\\n        ProposalExecutionContextList executionContexts;\\n    }\\n\\n    struct ProposalExecutionContext {\\n        string label; // Description of execution context\\n        address target; // The contract we wish to manipulate\\n        uint256 value; // We set this if the function requires native AVAX\\n        bytes data; // *encoded* function and parameters being executed at target\\n    }\\n\\n    struct ProposalExecutionContextList {\\n        uint256 length;\\n        ProposalExecutionContext[] contexts;\\n    }\\n\\n    struct Receipt {\\n        bool hasVoted; // did the user vote\\n        uint256 support; // what did user vote for?\\n        uint256 votes; // weight of the users vote\\n    }\\n\\n    enum ProposalState {\\n        Active,\\n        Defeated,\\n        PendingExecution,\\n        ReadyForExecution,\\n        Executed,\\n        Expired\\n    }\\n\\n    // emitted whenever a user votes\\n    event NewVote(\\n        uint256 proposalId,\\n        address voter,\\n        uint256 support,\\n        uint256 votes\\n    );\\n\\n    event ProposalCreated(uint256 proposalId, address proposer, string title);\\n    event ProposalExecuted(uint256 proposalId, address executor);\\n    event MinimumVotingPeriodChanged(uint256 newMinimumVotingPeriod);\\n    event ExecutionDelayChanged(uint256 newExecutionDelay);\\n    event QuorumVotesChanges(uint256 newQuorumVotes);\\n    event ProposalThresholdChanged(uint256 newProposalThreshold);\\n\\n    /// @notice Constructor\\n    /// @param _sAXIAL the address of the contract which determines each users voting power\\n    /// @dev This token must not be tradeable\\n    constructor(address _sAXIAL) {\\n        sAXIAL = IsAxial(_sAXIAL);\\n    }\\n\\n    function getProposalVotes(uint256 proposalId) public view returns (uint256[] memory) {\\n        return proposals[proposalId].votes;\\n    }\\n\\n    // Setters\\n\\n    function setMinimumVotingPeriod(uint256 _seconds) public onlyOwner {\\n        require(\\n            _seconds >= VOTING_PERIOD_MINIMUM,\\n            \\\"Governance::setMinimumVotingPeriod: TOO_SMALL\\\"\\n        );\\n        require(\\n            _seconds <= VOTING_PERIOD_MAXIMUM,\\n            \\\"Governance::setMinimumVotingPeriod: TOO_LARGE\\\"\\n        );\\n        minimumVotingPeriod = _seconds;\\n        emit MinimumVotingPeriodChanged(_seconds);\\n    }\\n\\n    function setExecutionDelay(uint256 _seconds) public onlyOwner {\\n        require(\\n            _seconds >= EXECUTION_DELAY_MINIMUM,\\n            \\\"Governance::setExecutionDelay: TOO_SMALL\\\"\\n        );\\n        require(\\n            _seconds <= EXECUTION_DELAY_MAXIMUM,\\n            \\\"Governance::setExecutionDelay: TOO_LARGE\\\"\\n        );\\n        executionDelay = _seconds;\\n        emit ExecutionDelayChanged(_seconds);\\n    }\\n\\n    function setQuorumVotes(uint256 _votes) public onlyOwner {\\n        require(\\n            _votes >= QUORUM_VOTES_MINIMUM,\\n            \\\"Governance::setQuorumVotes: TOO_SMALL\\\"\\n        );\\n        require(\\n            _votes <= QUORUM_VOTES_MAXIMUM,\\n            \\\"Governance::setQuorumVotes: TOO_LARGE\\\"\\n        );\\n        quorumVotes = _votes;\\n        emit QuorumVotesChanges(_votes);\\n    }\\n\\n    function setProposalThreshold(uint256 _votes) public onlyOwner {\\n        require(\\n            _votes >= PROPOSAL_THRESHOLD_MINIMUM,\\n            \\\"Governance::setProposalThreshold: TOO_SMALL\\\"\\n        );\\n        require(\\n            _votes <= PROPOSAL_THRESHOLD_MAXIMUM,\\n            \\\"Governance::setProposalThreshold: TOO_LARGE\\\"\\n        );\\n        proposalThreshold = _votes;\\n        emit ProposalThresholdChanged(_votes);\\n    }\\n\\n    /// @notice View the current status of any proposal\\n    /// @param _proposalId the index of the proposal we wish to view the State of\\n    /// @return ProposalState enum representing the status of the selected proposal\\n    function state(uint256 _proposalId) public view returns (ProposalState) {\\n        require(\\n            _proposalId < proposalCount,\\n            \\\"Governance::state: invalid proposal id\\\"\\n        );\\n\\n        Proposal memory proposal = proposals[_proposalId];\\n\\n        // These states are each being a precondition of the next state\\n\\n        // The proposal is currently allowing votes\\n        if (block.timestamp <= proposal.startTime + proposal.votingPeriod) {\\n            return ProposalState.Active;\\n        }\\n\\n        // The proposal is no longer allowing votes and has been executed\\n        if (proposal.executor != address(0)) {\\n            return ProposalState.Executed;\\n        }\\n\\n        // The proposal is yes/no and the yes votes did not exceed the no votes, or the yes notes did not exceed quorum\\n        if (proposal.isBoolean && (proposal.votes[1] <= proposal.votes[0] || proposal.votes[1] < proposal.quorumVotes)) {\\n            return ProposalState.Defeated;\\n        }\\n\\n        // The proposal is multiple choice and none of the choices exceeded quorum\\n        if (!proposal.isBoolean) {\\n            bool multipleChoiceDefeated = true;\\n            for (uint256 i = 0; i < proposal.votes.length; ++i) {\\n                if (proposal.votes[i] >= proposal.quorumVotes) {\\n                    multipleChoiceDefeated = false;\\n                }\\n            }\\n            if (multipleChoiceDefeated) {\\n                return ProposalState.Defeated;\\n            }\\n        }\\n\\n        // We are still in the execution delay window\\n        if (block.timestamp < proposal.startTime + proposal.votingPeriod + proposal.executionDelay) {\\n            return ProposalState.PendingExecution;\\n        }\\n\\n        // We have not yet exceeded the expiration period\\n        if (block.timestamp < proposal.startTime + proposal.votingPeriod + proposal.executionDelay + EXPIRATION_PERIOD) {\\n            return ProposalState.ReadyForExecution;\\n        }\\n\\n        // None of the previous conditions were met therefore the proposal has expired\\n        return ProposalState.Expired;\\n    }\\n\\n    /// @param _proposalId the index of the proposal we wish to view the receipt for\\n    /// @param _voter the user we wish to view the receipt for\\n    /// @return Receipt A copy of the voters selection for the provided proposal\\n    function getReceipt(uint256 _proposalId, address _voter) public view returns (Receipt memory) {\\n        return receipts[_proposalId][_voter];\\n    }\\n\\n    function constructProposalExecutionContexts(string[] calldata _labels, \\n                                               address[] calldata _targets, \\n                                               uint256[] calldata _values, \\n                                               bytes[] calldata _data) \\n                                               public pure returns (ProposalExecutionContextList memory) {\\n        require(_labels.length == _targets.length && _targets.length == _values.length && _values.length == _data.length, \\\"!length\\\");\\n        uint256 length = _labels.length;\\n        ProposalExecutionContextList memory list;\\n        list.length = length;\\n        list.contexts = new ProposalExecutionContext[](length);\\n            for (uint256 i = 0; i < length; ++i) {\\n                ProposalExecutionContext memory newProposalExecutionContext = ProposalExecutionContext({\\n                    label: _labels[i],\\n                    target: _targets[i],\\n                    value: _values[i],\\n                    data: _data[i]\\n                });\\n\\n                list.contexts[i] = newProposalExecutionContext;\\n            }\\n        return list;\\n    }\\n\\n    function constructProposalMetadata(string calldata _title, \\n                                       string calldata _metadata, \\n                                       uint256 _votingPeriod, \\n                                       bool _isBoolean) \\n                                       public pure returns (Proposal memory) {\\n        Proposal memory metaData;\\n        metaData.title = _title;\\n        metaData.metadata = _metadata;\\n        metaData.votingPeriod = _votingPeriod;\\n        metaData.isBoolean = _isBoolean;\\n        return metaData;\\n    }\\n\\n    /// @notice Allows any user with sufficient priviledges to propose a new vote\\n    /// @param _metaData Metadata struct generated via constructProposalMetadata\\n    /// @param _executionContexts Execution struct generated via constructExecutionContexts\\n    function propose(\\n        Proposal memory _metaData,\\n        ProposalExecutionContextList memory _executionContexts\\n    ) public  {\\n        require(_executionContexts.length == _executionContexts.contexts.length,\\n            \\\"Governance::propose: Malformed execution contexts list\\\"\\n        );\\n\\n        require(\\n            _metaData.votingPeriod >= minimumVotingPeriod,\\n            \\\"Governance::propose: voting period too short\\\"\\n        );\\n\\n        require(\\n            _metaData.votingPeriod <= VOTING_PERIOD_MAXIMUM,\\n            \\\"Governance::propose: voting period too long\\\"\\n        );\\n\\n        uint256 lastProposalId = lastProposalByAddress[msg.sender];\\n\\n        // Prevent the same person from having concurrent proposals\\n        if (lastProposalId > 0) {\\n            ProposalState proposalState = state(lastProposalId);\\n            require(\\n                proposalState == ProposalState.Executed ||\\n                proposalState == ProposalState.Defeated ||\\n                proposalState == ProposalState.Expired,\\n                \\\"Governance::propose: proposer already has a proposal in progress\\\"\\n            );\\n        }\\n\\n        uint256 votes = sAXIAL.balanceOf(msg.sender);\\n\\n        // user needs to have enough voting power to be allowed to propose\\n        require(\\n            votes > proposalThreshold,\\n            \\\"Governance::propose: proposer votes below proposal threshold\\\"\\n        );\\n\\n        // Allocate voting options\\n        uint256[] memory isMultipleChoice;\\n        if (!_metaData.isBoolean) {\\n            isMultipleChoice = new uint256[](_executionContexts.length);\\n        } else {\\n            isMultipleChoice = new uint256[](2); // 0: No, 1: Yes\\n        }\\n\\n        Proposal storage newProposal = proposals[proposalCount];\\n        // newProposal.votes = new uint256[](0);\\n\\n        // if (!_metaData.isBoolean) {\\n        //     for (uint256 i = 0; i < _executionContexts.length; ++i) {\\n        //         newProposal.votes.push(0); // A, B, C ...\\n        //     }\\n        // } else {\\n        //     newProposal.votes.push(0); // No\\n        //     newProposal.votes.push(0); // Yes\\n        // }\\n\\n        newProposal.title = _metaData.title;\\n        newProposal.metadata = _metaData.metadata;\\n        newProposal.proposer = msg.sender;\\n        newProposal.executor = address(0);\\n        newProposal.startTime = block.timestamp;\\n        newProposal.votingPeriod = _metaData.votingPeriod;\\n        newProposal.quorumVotes = quorumVotes;\\n        newProposal.executionDelay = executionDelay;\\n        newProposal.votes = isMultipleChoice;\\n        newProposal.isBoolean = _metaData.isBoolean;\\n        for (uint256 i = 0; i < _executionContexts.length; ++i) {\\n            newProposal.executionContexts.contexts.push(_executionContexts.contexts[i]);\\n        }\\n        newProposal.executionContexts.length = _executionContexts.length;\\n\\n\\n        //Save new proposal to state\\n        //proposals[proposalCount] = newProposal;\\n        lastProposalByAddress[msg.sender] = proposalCount;\\n\\n        ++proposalCount;\\n\\n        emit ProposalCreated(proposalCount, newProposal.proposer, newProposal.title);\\n    }\\n\\n    /// @notice Vote for selected option\\n    /// @param _proposalId the index of the proposal the user wishes to vote for or against\\n    /// @param _support index of the option the user wishes to cast their vote for\\n    /// @dev If the proposal is binary, 0 means No and 1 means Yes\\n    function vote(uint256 _proposalId, uint256 _support) public nonReentrant {\\n        require(\\n            state(_proposalId) == ProposalState.Active,\\n            \\\"Governance::vote: voting is closed\\\"\\n        );\\n\\n        // directly talk to state memory\\n        Proposal storage proposal = proposals[_proposalId];\\n        Receipt storage receipt = receipts[_proposalId][msg.sender];\\n\\n        uint256 votes = sAXIAL.balanceOf(msg.sender);\\n\\n        // Remove any previous votes if the user cast them already\\n        if (receipt.hasVoted) {\\n            proposal.votes[receipt.support] -= receipt.votes;\\n        }\\n\\n        // Increment votes for option user has now selected\\n        proposal.votes[_support] += votes;\\n\\n        // Update users receipt\\n        receipt.hasVoted = true;\\n        receipt.support = _support;\\n        receipt.votes = votes;\\n\\n        emit NewVote(_proposalId, msg.sender, _support, votes);\\n    }\\n\\n    /// @notice Allow any user to execute the proposal if it is in the execution stage\\n    /// @param _proposalId the index of the proposal we wish to execute\\n    /// @return bytes array the executed function/s returned\\n    function execute(uint256 _proposalId) public payable nonReentrant returns (bytes[] memory) {\\n        require(\\n            state(_proposalId) == ProposalState.ReadyForExecution,\\n            \\\"Governance::execute: cannot be executed\\\"\\n        );\\n\\n        Proposal storage proposal = proposals[_proposalId];\\n\\n        ProposalExecutionContextList storage proposalExecution = proposal.executionContexts;\\n\\n        bytes[] memory returnDatas;\\n\\n        // If yes/no options were given, execute all\\n        if (proposal.isBoolean) {\\n            returnDatas = new bytes[](proposalExecution.length);\\n            for (uint256 i = 0; i < proposalExecution.length; ++i) {\\n                (bool success, bytes memory returnData) = proposalExecution.contexts[i].target.call{\\n                                                   value: proposalExecution.contexts[i].value}(\\n                                                          proposalExecution.contexts[i].data);\\n                require(\\n                    success,\\n                    \\\"Governance::execute: transaction execution reverted.\\\"\\n                );\\n                returnDatas[i] = returnData;\\n            }\\n        } else {\\n            // If multiple choice, execute the option with the most votes\\n            returnDatas = new bytes[](1);\\n            uint256 contextToExecute = 0;\\n            uint256 maxVotes = proposal.quorumVotes;\\n            for (uint256 i = 0; i < proposal.votes.length; ++i) {\\n                if (proposal.votes[i] > maxVotes) {\\n                    maxVotes = proposal.votes[i];\\n                    contextToExecute = i;\\n                }\\n            }\\n            (bool success, bytes memory returnData) = proposalExecution.contexts[contextToExecute].target.call{\\n                                               value: proposalExecution.contexts[contextToExecute].value}(\\n                                                      proposalExecution.contexts[contextToExecute].data);\\n            require(\\n                success,\\n                \\\"Governance::execute: transaction execution reverted.\\\"\\n            );\\n            returnDatas[0] = returnData;\\n        }\\n\\n        proposal.executor = msg.sender;\\n\\n        emit ProposalExecuted(_proposalId, proposal.executor);\\n\\n        return returnDatas;\\n    }\\n}\",\"keccak256\":\"0xe8544def176f27c6bc89af377e4d7d783e5fe6fdc77c677883ec13d2853749d3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526203f48060025562015180600355620493e0600455620186a06005553480156200002d57600080fd5b506040516200354a3803806200354a8339810160408190526200005091620000d8565b6001600055620000603362000086565b600a80546001600160a01b0319166001600160a01b03929092169190911790556200010a565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215620000eb57600080fd5b81516001600160a01b03811681146200010357600080fd5b9392505050565b613430806200011a6000396000f3fe6080604052600436106101ee5760003560e01c806387ce23f51161010d578063ca75960b116100a0578063ea014f481161006f578063ea014f48146105c5578063ece40cc1146105da578063f2fde38b146105fa578063fdfd7d441461061a578063fe0d94c11461063a57600080fd5b8063ca75960b14610534578063da35c6641461054b578063e23a9a5214610561578063e4917d9f146105a557600080fd5b80638e19855e116100dc5780638e19855e146104d2578063b1c360ed146104e8578063b384abef146104fe578063b58131b01461051e57600080fd5b806387ce23f5146104465780638ac56a53146104735780638b2579891461048a5780638da5cb5b146104a057600080fd5b806347c66140116101855780636dedc06e116101545780636dedc06e146103e2578063715018a6146103f95780637ba456af1461040e5780637cc7b87a1461042657600080fd5b806347c66140146103715780635a1daf7314610278578063645c71511461039e57806368c67143146103b557600080fd5b806334e5e95a116101c157806334e5e95a1461028f57806338249a49146102bc5780633e4f49e6146102dc5780634178b2491461030957600080fd5b8063013cf08b146101f357806302ec8f9e1461023257806324bc1a64146102545780632e54929c14610278575b600080fd5b3480156101ff57600080fd5b5061021361020e3660046126dc565b61065a565b6040516102299a999897969594939291906127f2565b60405180910390f35b34801561023e57600080fd5b5061025261024d3660046126dc565b610981565b005b34801561026057600080fd5b5061026a60045481565b604051908152602001610229565b34801561028457600080fd5b5061026a62278d0081565b34801561029b57600080fd5b506102af6102aa3660046128d9565b610ab3565b604051610229919061299b565b3480156102c857600080fd5b506102526102d73660046126dc565b610b4e565b3480156102e857600080fd5b506102fc6102f73660046126dc565b610c7f565b6040516102299190612aa8565b34801561031557600080fd5b50610354610324366004612ae7565b600860209081526000928352604080842090915290825290208054600182015460029092015460ff909116919083565b604080519315158452602084019290925290820152606001610229565b34801561037d57600080fd5b5061039161038c3660046126dc565b611249565b6040516102299190612b13565b3480156103aa57600080fd5b5061026a620186a081565b3480156103c157600080fd5b5061026a6103d0366004612b2d565b60096020526000908152604090205481565b3480156103ee57600080fd5b5061026a6201518081565b34801561040557600080fd5b506102526112ae565b34801561041a57600080fd5b5061026a630112a88081565b34801561043257600080fd5b50610252610441366004612e55565b6112e4565b34801561045257600080fd5b50610466610461366004612ff9565b611877565b60405161022991906130bc565b34801561047f57600080fd5b5061026a6298968081565b34801561049657600080fd5b5061026a60035481565b3480156104ac57600080fd5b506001546001600160a01b03165b6040516001600160a01b039091168152602001610229565b3480156104de57600080fd5b5061026a61c35081565b3480156104f457600080fd5b5061026a60025481565b34801561050a57600080fd5b506102526105193660046130cf565b611adf565b34801561052a57600080fd5b5061026a60055481565b34801561054057600080fd5b5061026a6212750081565b34801561055757600080fd5b5061026a60065481565b34801561056d57600080fd5b5061058161057c366004612ae7565b611d36565b60408051825115158152602080840151908201529181015190820152606001610229565b3480156105b157600080fd5b506102526105c03660046126dc565b611dab565b3480156105d157600080fd5b5061026a601e81565b3480156105e657600080fd5b506102526105f53660046126dc565b611ed0565b34801561060657600080fd5b50610252610615366004612b2d565b611ffc565b34801561062657600080fd5b50600a546104ba906001600160a01b031681565b61064d6106483660046126dc565b612097565b60405161022991906130f1565b60076020526000908152604090208054819061067590613153565b80601f01602080910402602001604051908101604052809291908181526020018280546106a190613153565b80156106ee5780601f106106c3576101008083540402835291602001916106ee565b820191906000526020600020905b8154815290600101906020018083116106d157829003601f168201915b50505050509080600101805461070390613153565b80601f016020809104026020016040519081016040528092919081815260200182805461072f90613153565b801561077c5780601f106107515761010080835404028352916020019161077c565b820191906000526020600020905b81548152906001019060200180831161075f57829003601f168201915b505050506002830154600384015460048501546005860154600687015460078801546009890154604080518082018252600a8c0180548252600b8d01805484516020808302820181019096528181529d9e6001600160a01b039c8d169e9c909b169c50989a97999698959760ff909516969592949193808601939060009084015b82821015610974578382906000526020600020906004020160405180608001604052908160008201805461083090613153565b80601f016020809104026020016040519081016040528092919081815260200182805461085c90613153565b80156108a95780601f1061087e576101008083540402835291602001916108a9565b820191906000526020600020905b81548152906001019060200180831161088c57829003601f168201915b505050918352505060018201546001600160a01b03166020820152600282015460408201526003820180546060909201916108e390613153565b80601f016020809104026020016040519081016040528092919081815260200182805461090f90613153565b801561095c5780601f106109315761010080835404028352916020019161095c565b820191906000526020600020905b81548152906001019060200180831161093f57829003601f168201915b505050505081525050815260200190600101906107fd565b505050508152505090508a565b6001546001600160a01b031633146109b45760405162461bcd60e51b81526004016109ab9061318e565b60405180910390fd5b620186a0811015610a155760405162461bcd60e51b815260206004820152602560248201527f476f7665726e616e63653a3a73657451756f72756d566f7465733a20544f4f5f60448201526414d350531360da1b60648201526084016109ab565b630112a880811115610a775760405162461bcd60e51b815260206004820152602560248201527f476f7665726e616e63653a3a73657451756f72756d566f7465733a20544f4f5f6044820152644c4152474560d81b60648201526084016109ab565b60048190556040518181527f4d82feec215c8e1f4d904b7268dd6499d866a96685c31f1e394e6663715f76e1906020015b60405180910390a150565b610abb612581565b610ac3612581565b87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8801819004810282018101909252868152908790879081908401838280828437600092019190915250505050602082015260a0810193909352501515610120820152949350505050565b6001546001600160a01b03163314610b785760405162461bcd60e51b81526004016109ab9061318e565b62015180811015610be15760405162461bcd60e51b815260206004820152602d60248201527f476f7665726e616e63653a3a7365744d696e696d756d566f74696e675065726960448201526c1bd90e881513d3d7d4d3505313609a1b60648201526084016109ab565b62278d00811115610c4a5760405162461bcd60e51b815260206004820152602d60248201527f476f7665726e616e63653a3a7365744d696e696d756d566f74696e675065726960448201526c6f643a20544f4f5f4c4152474560981b60648201526084016109ab565b60028190556040518181527ff4f36c6d71e6dce23fde1248bfb40024041297ac1665de2840339f8a6b32e54590602001610aa8565b60006006548210610ce15760405162461bcd60e51b815260206004820152602660248201527f476f7665726e616e63653a3a73746174653a20696e76616c69642070726f706f6044820152651cd85b081a5960d21b60648201526084016109ab565b60008281526007602052604080822081516101608101909252805482908290610d0990613153565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3590613153565b8015610d825780601f10610d5757610100808354040283529160200191610d82565b820191906000526020600020905b815481529060010190602001808311610d6557829003601f168201915b50505050508152602001600182018054610d9b90613153565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc790613153565b8015610e145780601f10610de957610100808354040283529160200191610e14565b820191906000526020600020905b815481529060010190602001808311610df757829003601f168201915b505050918352505060028201546001600160a01b0390811660208084019190915260038401549091166040808401919091526004840154606084015260058401546080840152600684015460a0840152600784015460c084015260088401805482518185028101850190935280835260e0909401939192909190830182828015610ebd57602002820191906000526020600020905b815481526020019060010190808311610ea9575b5050509183525050600982015460ff161515602080830191909152604080518082018252600a850180548252600b86018054845181870281018701865281815294909601959294919385830193909260009084015b828210156110895783829060005260206000209060040201604051806080016040529081600082018054610f4590613153565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7190613153565b8015610fbe5780601f10610f9357610100808354040283529160200191610fbe565b820191906000526020600020905b815481529060010190602001808311610fa157829003601f168201915b505050918352505060018201546001600160a01b0316602082015260028201546040820152600382018054606090920191610ff890613153565b80601f016020809104026020016040519081016040528092919081815260200182805461102490613153565b80156110715780601f1061104657610100808354040283529160200191611071565b820191906000526020600020905b81548152906001019060200180831161105457829003601f168201915b50505050508152505081526020019060010190610f12565b5050509152505090525060a081015160808201519192506110a9916131d9565b42116110b85750600092915050565b60608101516001600160a01b0316156110d45750600492915050565b806101200151801561115057508061010001516000815181106110f9576110f96131f1565b6020026020010151816101000151600181518110611119576111196131f1565b602002602001015111158061115057508060c00151816101000151600181518110611146576111466131f1565b6020026020010151105b1561115e5750600192915050565b8061012001516111cc57600160005b826101000151518110156111b9578260c001518361010001518281518110611197576111976131f1565b6020026020010151106111a957600091505b6111b281613207565b905061116d565b5080156111ca575060019392505050565b505b8060e001518160a0015182608001516111e591906131d9565b6111ef91906131d9565b4210156111ff5750600292915050565b621275008160e001518260a00151836080015161121c91906131d9565b61122691906131d9565b61123091906131d9565b4210156112405750600392915050565b50600592915050565b6000818152600760209081526040918290206008018054835181840281018401909452808452606093928301828280156112a257602002820191906000526020600020905b81548152602001906001019080831161128e575b50505050509050919050565b6001546001600160a01b031633146112d85760405162461bcd60e51b81526004016109ab9061318e565b6112e2600061252f565b565b6020810151518151146113585760405162461bcd60e51b815260206004820152603660248201527f476f7665726e616e63653a3a70726f706f73653a204d616c666f726d656420656044820152751e1958dd5d1a5bdb8818dbdb9d195e1d1cc81b1a5cdd60521b60648201526084016109ab565b6002548260a0015110156113c35760405162461bcd60e51b815260206004820152602c60248201527f476f7665726e616e63653a3a70726f706f73653a20766f74696e67207065726960448201526b1bd9081d1bdbc81cda1bdc9d60a21b60648201526084016109ab565b62278d008260a00151111561142e5760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e616e63653a3a70726f706f73653a20766f74696e67207065726960448201526a6f6420746f6f206c6f6e6760a81b60648201526084016109ab565b33600090815260096020526040902054801561151457600061144f82610c7f565b9050600481600581111561146557611465612a92565b14806114825750600181600581111561148057611480612a92565b145b8061149e5750600581600581111561149c5761149c612a92565b145b611512576040805162461bcd60e51b81526020600482015260248101919091527f476f7665726e616e63653a3a70726f706f73653a2070726f706f73657220616c60448201527f72656164792068617320612070726f706f73616c20696e2070726f677265737360648201526084016109ab565b505b600a546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561155857600080fd5b505afa15801561156c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115909190613222565b905060055481116116095760405162461bcd60e51b815260206004820152603c60248201527f476f7665726e616e63653a3a70726f706f73653a2070726f706f73657220766f60448201527f7465732062656c6f772070726f706f73616c207468726573686f6c640000000060648201526084016109ab565b606084610120015161165f5783516001600160401b0381111561162e5761162e612b48565b604051908082528060200260200182016040528015611657578160200160208202803683370190505b509050611680565b60408051600280825260608201835290916020830190803683370190505090505b60065460009081526007602090815260409091208651805191926116a992849290910190612609565b5060208087015180516116c29260018501920190612609565b506002810180546001600160a01b03199081163317909155600380830180549092169091554260048084019190915560a08801516005840155546006830155546007820155815161171c906008830190602085019061268d565b5061012086015160098201805460ff191691151591909117905560005b85518110156117f55781600a016001018660200151828151811061175f5761175f6131f1565b60209081029190910181015182546001810184556000938452928290208151805192946004029091019261179892849290910190612609565b506020828101516001830180546001600160a01b0319166001600160a01b0390921691909117905560408301516002830155606083015180516117e19260038501920190612609565b505050806117ee90613207565b9050611739565b508451600a820155600680543360009081526009602052604081208290559061181d90613207565b9091555060065460028201546040517f7585f467599d0f008985f231af99293be388626ac16ca59505c2f8f88969cd63926118679290916001600160a01b0390911690859061323b565b60405180910390a1505050505050565b604080518082019091526000815260606020820152878614801561189a57508584145b80156118a557508382145b6118db5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016109ab565b60408051808201909152606060208201528881528890816001600160401b0381111561190957611909612b48565b60405190808252806020026020018201604052801561196e57816020015b61195b60405180608001604052806060815260200160006001600160a01b0316815260200160008152602001606081525090565b8152602001906001900390816119275790505b50602082015260005b82811015611ad057600060405180608001604052808e8e8581811061199e5761199e6131f1565b90506020028101906119b091906132d7565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020018c8c858181106119fc576119fc6131f1565b9050602002016020810190611a119190612b2d565b6001600160a01b031681526020018a8a85818110611a3157611a316131f1565b905060200201358152602001888885818110611a4f57611a4f6131f1565b9050602002810190611a6191906132d7565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505091525060208401518051919250829184908110611ab357611ab36131f1565b60200260200101819052505080611ac990613207565b9050611977565b509a9950505050505050505050565b60026000541415611b325760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109ab565b60026000908155611b4283610c7f565b6005811115611b5357611b53612a92565b14611bab5760405162461bcd60e51b815260206004820152602260248201527f476f7665726e616e63653a3a766f74653a20766f74696e6720697320636c6f73604482015261195960f21b60648201526084016109ab565b600082815260076020908152604080832060088352818420338086529352818420600a5492516370a0823160e01b815260048101949094529093909290916001600160a01b0316906370a082319060240160206040518083038186803b158015611c1457600080fd5b505afa158015611c28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4c9190613222565b825490915060ff1615611c9657816002015483600801836001015481548110611c7757611c776131f1565b906000526020600020016000828254611c90919061331d565b90915550505b80836008018581548110611cac57611cac6131f1565b906000526020600020016000828254611cc591906131d9565b9091555050815460ff19166001908117835582018490556002820181905560408051868152336020820152908101859052606081018290527f30fc966e088e5d91399acda87c233b87ed99de5ab4e137c1fbc19a3bb9a87bff9060800160405180910390a150506001600055505050565b611d5c604051806060016040528060001515815260200160008152602001600081525090565b5060009182526008602090815260408084206001600160a01b03939093168452918152918190208151606081018352815460ff1615158152600182015493810193909352600201549082015290565b6001546001600160a01b03163314611dd55760405162461bcd60e51b81526004016109ab9061318e565b601e811015611e375760405162461bcd60e51b815260206004820152602860248201527f476f7665726e616e63653a3a736574457865637574696f6e44656c61793a205460448201526713d3d7d4d350531360c21b60648201526084016109ab565b62278d00811115611e9b5760405162461bcd60e51b815260206004820152602860248201527f476f7665726e616e63653a3a736574457865637574696f6e44656c61793a20546044820152674f4f5f4c4152474560c01b60648201526084016109ab565b60038190556040518181527f193d917ecb8a5c0270b102b28be14cc9ee25763c29c0b87e980a0bc65d485e7590602001610aa8565b6001546001600160a01b03163314611efa5760405162461bcd60e51b81526004016109ab9061318e565b61c350811015611f605760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e616e63653a3a73657450726f706f73616c5468726573686f6c6460448201526a0e881513d3d7d4d350531360aa1b60648201526084016109ab565b62989680811115611fc75760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e616e63653a3a73657450726f706f73616c5468726573686f6c6460448201526a3a20544f4f5f4c4152474560a81b60648201526084016109ab565b60058190556040518181527f0553c1e1d490599cc62884d38bddf3b538bf26581e3d5a830cb2aa0a54fc563390602001610aa8565b6001546001600160a01b031633146120265760405162461bcd60e51b81526004016109ab9061318e565b6001600160a01b03811661208b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109ab565b6120948161252f565b50565b6060600260005414156120ec5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109ab565b600260005560036120fc83610c7f565b600581111561210d5761210d612a92565b1461216a5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e616e63653a3a657865637574653a2063616e6e6f7420626520656044820152661e1958dd5d195960ca1b60648201526084016109ab565b60008281526007602052604090206009810154600a82019060609060ff16156123165781546001600160401b038111156121a6576121a6612b48565b6040519080825280602002602001820160405280156121d957816020015b60608152602001906001900390816121c45790505b50905060005b825481101561231057600080846001018381548110612200576122006131f1565b60009182526020909120600160049092020181015490860180546001600160a01b039092169185908110612236576122366131f1565b90600052602060002090600402016002015486600101858154811061225d5761225d6131f1565b906000526020600020906004020160030160405161227b9190613334565b60006040518083038185875af1925050503d80600081146122b8576040519150601f19603f3d011682016040523d82523d6000602084013e6122bd565b606091505b5091509150816122df5760405162461bcd60e51b81526004016109ab906133a6565b808484815181106122f2576122f26131f1565b602002602001018190525050508061230990613207565b90506121df565b506124d1565b60408051600180825281830190925290816020015b606081526020019060019003908161232b5750506006840154909150600090815b60088601548110156123b5578186600801828154811061236e5761236e6131f1565b906000526020600020015411156123a557856008018181548110612394576123946131f1565b906000526020600020015491508092505b6123ae81613207565b905061234c565b506000808560010184815481106123ce576123ce6131f1565b60009182526020909120600160049092020181015490870180546001600160a01b039092169186908110612404576124046131f1565b90600052602060002090600402016002015487600101868154811061242b5761242b6131f1565b90600052602060002090600402016003016040516124499190613334565b60006040518083038185875af1925050503d8060008114612486576040519150601f19603f3d011682016040523d82523d6000602084013e61248b565b606091505b5091509150816124ad5760405162461bcd60e51b81526004016109ab906133a6565b80856000815181106124c1576124c16131f1565b6020026020010181905250505050505b6003830180546001600160a01b031916339081179091556040805187815260208101929092527f9c85b616f29fca57a17eafe71cf9ff82ffef41766e2cf01ea7f8f7878dd3ec24910160405180910390a16001600055949350505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604051806101600160405280606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160608152602001600015158152602001612604604051806040016040528060008152602001606081525090565b905290565b82805461261590613153565b90600052602060002090601f016020900481019282612637576000855561267d565b82601f1061265057805160ff191683800117855561267d565b8280016001018555821561267d579182015b8281111561267d578251825591602001919060010190612662565b506126899291506126c7565b5090565b82805482825590600052602060002090810192821561267d579160200282018281111561267d578251825591602001919060010190612662565b5b8082111561268957600081556001016126c8565b6000602082840312156126ee57600080fd5b5035919050565b6000815180845260005b8181101561271b576020818501810151868301820152016126ff565b8181111561272d576000602083870101525b50601f01601f19169290920160200192915050565b60006040808401835185526020808501518382880152828151808552606094508489019150848160051b8a0101848401935060005b828110156127e457605f198b830301845284516080815181855261279d828601826126f5565b838a01516001600160a01b0316868b01528b8401518c870152928a01518584038b8701529291506127d0905081836126f5565b968801969588019593505050600101612777565b509998505050505050505050565b60006101408083526128068184018e6126f5565b9050828103602084015261281a818d6126f5565b6001600160a01b038c811660408601528b166060850152608084018a905260a0840189905260c0840188905260e08401879052851515610100850152838103610120850152905061286b8185612742565b9d9c50505050505050505050505050565b60008083601f84011261288e57600080fd5b5081356001600160401b038111156128a557600080fd5b6020830191508360208285010111156128bd57600080fd5b9250929050565b803580151581146128d457600080fd5b919050565b600080600080600080608087890312156128f257600080fd5b86356001600160401b038082111561290957600080fd5b6129158a838b0161287c565b9098509650602089013591508082111561292e57600080fd5b5061293b89828a0161287c565b90955093505060408701359150612954606088016128c4565b90509295509295509295565b600081518084526020808501945080840160005b8381101561299057815187529582019590820190600101612974565b509495945050505050565b60208152600082516101608060208501526129ba6101808501836126f5565b91506020850151601f19808685030160408701526129d884836126f5565b9350604087015191506129f660608701836001600160a01b03169052565b60608701516001600160a01b03811660808801529150608087015160a087015260a087015160c087015260c087015160e087015260e08701519150610100828188015280880151925050610120818786030181880152612a568584612960565b945080880151925050610140612a6f8188018415159052565b870151868503909101838701529050612a888382612742565b9695505050505050565b634e487b7160e01b600052602160045260246000fd5b6020810160068310612aca57634e487b7160e01b600052602160045260246000fd5b91905290565b80356001600160a01b03811681146128d457600080fd5b60008060408385031215612afa57600080fd5b82359150612b0a60208401612ad0565b90509250929050565b602081526000612b266020830184612960565b9392505050565b600060208284031215612b3f57600080fd5b612b2682612ad0565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715612b8057612b80612b48565b60405290565b604051608081016001600160401b0381118282101715612b8057612b80612b48565b60405161016081016001600160401b0381118282101715612b8057612b80612b48565b604051601f8201601f191681016001600160401b0381118282101715612bf357612bf3612b48565b604052919050565b60006001600160401b03831115612c1457612c14612b48565b612c27601f8401601f1916602001612bcb565b9050828152838383011115612c3b57600080fd5b828260208301376000602084830101529392505050565b600082601f830112612c6357600080fd5b612b2683833560208501612bfb565b60006001600160401b03821115612c8b57612c8b612b48565b5060051b60200190565b600082601f830112612ca657600080fd5b81356020612cbb612cb683612c72565b612bcb565b82815260059290921b84018101918181019086841115612cda57600080fd5b8286015b84811015612cf55780358352918301918301612cde565b509695505050505050565b60006040808385031215612d1357600080fd5b612d1b612b5e565b9150823582526020808401356001600160401b0380821115612d3c57600080fd5b818601915086601f830112612d5057600080fd5b8135612d5e612cb682612c72565b81815260059190911b83018401908481019089831115612d7d57600080fd5b8585015b83811015612e4257803585811115612d995760008081fd5b86016080818d03601f1901811315612db15760008081fd5b612db9612b86565b8983013588811115612dcb5760008081fd5b612dd98f8c83870101612c52565b825250612de78b8401612ad0565b818b01526060838101358c830152918301359188831115612e085760008081fd5b82840193508e603f850112612e1f57600092508283fd5b612e2f8f8c8601358e8701612bfb565b9082015285525050918601918601612d81565b5080868901525050505050505092915050565b60008060408385031215612e6857600080fd5b82356001600160401b0380821115612e7f57600080fd5b908401906101608287031215612e9457600080fd5b612e9c612ba8565b823582811115612eab57600080fd5b612eb788828601612c52565b825250602083013582811115612ecc57600080fd5b612ed888828601612c52565b602083015250612eea60408401612ad0565b6040820152612efb60608401612ad0565b60608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e08201526101008084013583811115612f3c57600080fd5b612f4889828701612c95565b828401525050610120612f5c8185016128c4565b908201526101408381013583811115612f7457600080fd5b612f8089828701612d00565b828401525050809450506020850135915080821115612f9e57600080fd5b50612fab85828601612d00565b9150509250929050565b60008083601f840112612fc757600080fd5b5081356001600160401b03811115612fde57600080fd5b6020830191508360208260051b85010111156128bd57600080fd5b6000806000806000806000806080898b03121561301557600080fd5b88356001600160401b038082111561302c57600080fd5b6130388c838d01612fb5565b909a50985060208b013591508082111561305157600080fd5b61305d8c838d01612fb5565b909850965060408b013591508082111561307657600080fd5b6130828c838d01612fb5565b909650945060608b013591508082111561309b57600080fd5b506130a88b828c01612fb5565b999c989b5096995094979396929594505050565b602081526000612b266020830184612742565b600080604083850312156130e257600080fd5b50508035926020909101359150565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561314657603f198886030184526131348583516126f5565b94509285019290850190600101613118565b5092979650505050505050565b600181811c9082168061316757607f821691505b6020821081141561318857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156131ec576131ec6131c3565b500190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561321b5761321b6131c3565b5060010190565b60006020828403121561323457600080fd5b5051919050565b8381526000602060018060a01b03851681840152606060408401526000845461326381613153565b80606087015260806001808416600081146132855760018114613299576132c7565b60ff1985168984015260a0890195506132c7565b896000528660002060005b858110156132bf5781548b82018601529083019088016132a4565b8a0184019650505b50939a9950505050505050505050565b6000808335601e198436030181126132ee57600080fd5b8301803591506001600160401b0382111561330857600080fd5b6020019150368190038213156128bd57600080fd5b60008282101561332f5761332f6131c3565b500390565b600080835461334281613153565b6001828116801561335a576001811461336b5761339a565b60ff1984168752828701945061339a565b8760005260208060002060005b858110156133915781548a820152908401908201613378565b50505082870194505b50929695505050505050565b60208082526034908201527f476f7665726e616e63653a3a657865637574653a207472616e73616374696f6e6040820152731032bc32b1baba34b7b7103932bb32b93a32b21760611b60608201526080019056fea264697066735822122031ef345b9dde6b63f8e12e02969052f0f75ca5b12680b39a25e6df413272bf3064736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106101ee5760003560e01c806387ce23f51161010d578063ca75960b116100a0578063ea014f481161006f578063ea014f48146105c5578063ece40cc1146105da578063f2fde38b146105fa578063fdfd7d441461061a578063fe0d94c11461063a57600080fd5b8063ca75960b14610534578063da35c6641461054b578063e23a9a5214610561578063e4917d9f146105a557600080fd5b80638e19855e116100dc5780638e19855e146104d2578063b1c360ed146104e8578063b384abef146104fe578063b58131b01461051e57600080fd5b806387ce23f5146104465780638ac56a53146104735780638b2579891461048a5780638da5cb5b146104a057600080fd5b806347c66140116101855780636dedc06e116101545780636dedc06e146103e2578063715018a6146103f95780637ba456af1461040e5780637cc7b87a1461042657600080fd5b806347c66140146103715780635a1daf7314610278578063645c71511461039e57806368c67143146103b557600080fd5b806334e5e95a116101c157806334e5e95a1461028f57806338249a49146102bc5780633e4f49e6146102dc5780634178b2491461030957600080fd5b8063013cf08b146101f357806302ec8f9e1461023257806324bc1a64146102545780632e54929c14610278575b600080fd5b3480156101ff57600080fd5b5061021361020e3660046126dc565b61065a565b6040516102299a999897969594939291906127f2565b60405180910390f35b34801561023e57600080fd5b5061025261024d3660046126dc565b610981565b005b34801561026057600080fd5b5061026a60045481565b604051908152602001610229565b34801561028457600080fd5b5061026a62278d0081565b34801561029b57600080fd5b506102af6102aa3660046128d9565b610ab3565b604051610229919061299b565b3480156102c857600080fd5b506102526102d73660046126dc565b610b4e565b3480156102e857600080fd5b506102fc6102f73660046126dc565b610c7f565b6040516102299190612aa8565b34801561031557600080fd5b50610354610324366004612ae7565b600860209081526000928352604080842090915290825290208054600182015460029092015460ff909116919083565b604080519315158452602084019290925290820152606001610229565b34801561037d57600080fd5b5061039161038c3660046126dc565b611249565b6040516102299190612b13565b3480156103aa57600080fd5b5061026a620186a081565b3480156103c157600080fd5b5061026a6103d0366004612b2d565b60096020526000908152604090205481565b3480156103ee57600080fd5b5061026a6201518081565b34801561040557600080fd5b506102526112ae565b34801561041a57600080fd5b5061026a630112a88081565b34801561043257600080fd5b50610252610441366004612e55565b6112e4565b34801561045257600080fd5b50610466610461366004612ff9565b611877565b60405161022991906130bc565b34801561047f57600080fd5b5061026a6298968081565b34801561049657600080fd5b5061026a60035481565b3480156104ac57600080fd5b506001546001600160a01b03165b6040516001600160a01b039091168152602001610229565b3480156104de57600080fd5b5061026a61c35081565b3480156104f457600080fd5b5061026a60025481565b34801561050a57600080fd5b506102526105193660046130cf565b611adf565b34801561052a57600080fd5b5061026a60055481565b34801561054057600080fd5b5061026a6212750081565b34801561055757600080fd5b5061026a60065481565b34801561056d57600080fd5b5061058161057c366004612ae7565b611d36565b60408051825115158152602080840151908201529181015190820152606001610229565b3480156105b157600080fd5b506102526105c03660046126dc565b611dab565b3480156105d157600080fd5b5061026a601e81565b3480156105e657600080fd5b506102526105f53660046126dc565b611ed0565b34801561060657600080fd5b50610252610615366004612b2d565b611ffc565b34801561062657600080fd5b50600a546104ba906001600160a01b031681565b61064d6106483660046126dc565b612097565b60405161022991906130f1565b60076020526000908152604090208054819061067590613153565b80601f01602080910402602001604051908101604052809291908181526020018280546106a190613153565b80156106ee5780601f106106c3576101008083540402835291602001916106ee565b820191906000526020600020905b8154815290600101906020018083116106d157829003601f168201915b50505050509080600101805461070390613153565b80601f016020809104026020016040519081016040528092919081815260200182805461072f90613153565b801561077c5780601f106107515761010080835404028352916020019161077c565b820191906000526020600020905b81548152906001019060200180831161075f57829003601f168201915b505050506002830154600384015460048501546005860154600687015460078801546009890154604080518082018252600a8c0180548252600b8d01805484516020808302820181019096528181529d9e6001600160a01b039c8d169e9c909b169c50989a97999698959760ff909516969592949193808601939060009084015b82821015610974578382906000526020600020906004020160405180608001604052908160008201805461083090613153565b80601f016020809104026020016040519081016040528092919081815260200182805461085c90613153565b80156108a95780601f1061087e576101008083540402835291602001916108a9565b820191906000526020600020905b81548152906001019060200180831161088c57829003601f168201915b505050918352505060018201546001600160a01b03166020820152600282015460408201526003820180546060909201916108e390613153565b80601f016020809104026020016040519081016040528092919081815260200182805461090f90613153565b801561095c5780601f106109315761010080835404028352916020019161095c565b820191906000526020600020905b81548152906001019060200180831161093f57829003601f168201915b505050505081525050815260200190600101906107fd565b505050508152505090508a565b6001546001600160a01b031633146109b45760405162461bcd60e51b81526004016109ab9061318e565b60405180910390fd5b620186a0811015610a155760405162461bcd60e51b815260206004820152602560248201527f476f7665726e616e63653a3a73657451756f72756d566f7465733a20544f4f5f60448201526414d350531360da1b60648201526084016109ab565b630112a880811115610a775760405162461bcd60e51b815260206004820152602560248201527f476f7665726e616e63653a3a73657451756f72756d566f7465733a20544f4f5f6044820152644c4152474560d81b60648201526084016109ab565b60048190556040518181527f4d82feec215c8e1f4d904b7268dd6499d866a96685c31f1e394e6663715f76e1906020015b60405180910390a150565b610abb612581565b610ac3612581565b87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8801819004810282018101909252868152908790879081908401838280828437600092019190915250505050602082015260a0810193909352501515610120820152949350505050565b6001546001600160a01b03163314610b785760405162461bcd60e51b81526004016109ab9061318e565b62015180811015610be15760405162461bcd60e51b815260206004820152602d60248201527f476f7665726e616e63653a3a7365744d696e696d756d566f74696e675065726960448201526c1bd90e881513d3d7d4d3505313609a1b60648201526084016109ab565b62278d00811115610c4a5760405162461bcd60e51b815260206004820152602d60248201527f476f7665726e616e63653a3a7365744d696e696d756d566f74696e675065726960448201526c6f643a20544f4f5f4c4152474560981b60648201526084016109ab565b60028190556040518181527ff4f36c6d71e6dce23fde1248bfb40024041297ac1665de2840339f8a6b32e54590602001610aa8565b60006006548210610ce15760405162461bcd60e51b815260206004820152602660248201527f476f7665726e616e63653a3a73746174653a20696e76616c69642070726f706f6044820152651cd85b081a5960d21b60648201526084016109ab565b60008281526007602052604080822081516101608101909252805482908290610d0990613153565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3590613153565b8015610d825780601f10610d5757610100808354040283529160200191610d82565b820191906000526020600020905b815481529060010190602001808311610d6557829003601f168201915b50505050508152602001600182018054610d9b90613153565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc790613153565b8015610e145780601f10610de957610100808354040283529160200191610e14565b820191906000526020600020905b815481529060010190602001808311610df757829003601f168201915b505050918352505060028201546001600160a01b0390811660208084019190915260038401549091166040808401919091526004840154606084015260058401546080840152600684015460a0840152600784015460c084015260088401805482518185028101850190935280835260e0909401939192909190830182828015610ebd57602002820191906000526020600020905b815481526020019060010190808311610ea9575b5050509183525050600982015460ff161515602080830191909152604080518082018252600a850180548252600b86018054845181870281018701865281815294909601959294919385830193909260009084015b828210156110895783829060005260206000209060040201604051806080016040529081600082018054610f4590613153565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7190613153565b8015610fbe5780601f10610f9357610100808354040283529160200191610fbe565b820191906000526020600020905b815481529060010190602001808311610fa157829003601f168201915b505050918352505060018201546001600160a01b0316602082015260028201546040820152600382018054606090920191610ff890613153565b80601f016020809104026020016040519081016040528092919081815260200182805461102490613153565b80156110715780601f1061104657610100808354040283529160200191611071565b820191906000526020600020905b81548152906001019060200180831161105457829003601f168201915b50505050508152505081526020019060010190610f12565b5050509152505090525060a081015160808201519192506110a9916131d9565b42116110b85750600092915050565b60608101516001600160a01b0316156110d45750600492915050565b806101200151801561115057508061010001516000815181106110f9576110f96131f1565b6020026020010151816101000151600181518110611119576111196131f1565b602002602001015111158061115057508060c00151816101000151600181518110611146576111466131f1565b6020026020010151105b1561115e5750600192915050565b8061012001516111cc57600160005b826101000151518110156111b9578260c001518361010001518281518110611197576111976131f1565b6020026020010151106111a957600091505b6111b281613207565b905061116d565b5080156111ca575060019392505050565b505b8060e001518160a0015182608001516111e591906131d9565b6111ef91906131d9565b4210156111ff5750600292915050565b621275008160e001518260a00151836080015161121c91906131d9565b61122691906131d9565b61123091906131d9565b4210156112405750600392915050565b50600592915050565b6000818152600760209081526040918290206008018054835181840281018401909452808452606093928301828280156112a257602002820191906000526020600020905b81548152602001906001019080831161128e575b50505050509050919050565b6001546001600160a01b031633146112d85760405162461bcd60e51b81526004016109ab9061318e565b6112e2600061252f565b565b6020810151518151146113585760405162461bcd60e51b815260206004820152603660248201527f476f7665726e616e63653a3a70726f706f73653a204d616c666f726d656420656044820152751e1958dd5d1a5bdb8818dbdb9d195e1d1cc81b1a5cdd60521b60648201526084016109ab565b6002548260a0015110156113c35760405162461bcd60e51b815260206004820152602c60248201527f476f7665726e616e63653a3a70726f706f73653a20766f74696e67207065726960448201526b1bd9081d1bdbc81cda1bdc9d60a21b60648201526084016109ab565b62278d008260a00151111561142e5760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e616e63653a3a70726f706f73653a20766f74696e67207065726960448201526a6f6420746f6f206c6f6e6760a81b60648201526084016109ab565b33600090815260096020526040902054801561151457600061144f82610c7f565b9050600481600581111561146557611465612a92565b14806114825750600181600581111561148057611480612a92565b145b8061149e5750600581600581111561149c5761149c612a92565b145b611512576040805162461bcd60e51b81526020600482015260248101919091527f476f7665726e616e63653a3a70726f706f73653a2070726f706f73657220616c60448201527f72656164792068617320612070726f706f73616c20696e2070726f677265737360648201526084016109ab565b505b600a546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561155857600080fd5b505afa15801561156c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115909190613222565b905060055481116116095760405162461bcd60e51b815260206004820152603c60248201527f476f7665726e616e63653a3a70726f706f73653a2070726f706f73657220766f60448201527f7465732062656c6f772070726f706f73616c207468726573686f6c640000000060648201526084016109ab565b606084610120015161165f5783516001600160401b0381111561162e5761162e612b48565b604051908082528060200260200182016040528015611657578160200160208202803683370190505b509050611680565b60408051600280825260608201835290916020830190803683370190505090505b60065460009081526007602090815260409091208651805191926116a992849290910190612609565b5060208087015180516116c29260018501920190612609565b506002810180546001600160a01b03199081163317909155600380830180549092169091554260048084019190915560a08801516005840155546006830155546007820155815161171c906008830190602085019061268d565b5061012086015160098201805460ff191691151591909117905560005b85518110156117f55781600a016001018660200151828151811061175f5761175f6131f1565b60209081029190910181015182546001810184556000938452928290208151805192946004029091019261179892849290910190612609565b506020828101516001830180546001600160a01b0319166001600160a01b0390921691909117905560408301516002830155606083015180516117e19260038501920190612609565b505050806117ee90613207565b9050611739565b508451600a820155600680543360009081526009602052604081208290559061181d90613207565b9091555060065460028201546040517f7585f467599d0f008985f231af99293be388626ac16ca59505c2f8f88969cd63926118679290916001600160a01b0390911690859061323b565b60405180910390a1505050505050565b604080518082019091526000815260606020820152878614801561189a57508584145b80156118a557508382145b6118db5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016109ab565b60408051808201909152606060208201528881528890816001600160401b0381111561190957611909612b48565b60405190808252806020026020018201604052801561196e57816020015b61195b60405180608001604052806060815260200160006001600160a01b0316815260200160008152602001606081525090565b8152602001906001900390816119275790505b50602082015260005b82811015611ad057600060405180608001604052808e8e8581811061199e5761199e6131f1565b90506020028101906119b091906132d7565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020018c8c858181106119fc576119fc6131f1565b9050602002016020810190611a119190612b2d565b6001600160a01b031681526020018a8a85818110611a3157611a316131f1565b905060200201358152602001888885818110611a4f57611a4f6131f1565b9050602002810190611a6191906132d7565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505091525060208401518051919250829184908110611ab357611ab36131f1565b60200260200101819052505080611ac990613207565b9050611977565b509a9950505050505050505050565b60026000541415611b325760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109ab565b60026000908155611b4283610c7f565b6005811115611b5357611b53612a92565b14611bab5760405162461bcd60e51b815260206004820152602260248201527f476f7665726e616e63653a3a766f74653a20766f74696e6720697320636c6f73604482015261195960f21b60648201526084016109ab565b600082815260076020908152604080832060088352818420338086529352818420600a5492516370a0823160e01b815260048101949094529093909290916001600160a01b0316906370a082319060240160206040518083038186803b158015611c1457600080fd5b505afa158015611c28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4c9190613222565b825490915060ff1615611c9657816002015483600801836001015481548110611c7757611c776131f1565b906000526020600020016000828254611c90919061331d565b90915550505b80836008018581548110611cac57611cac6131f1565b906000526020600020016000828254611cc591906131d9565b9091555050815460ff19166001908117835582018490556002820181905560408051868152336020820152908101859052606081018290527f30fc966e088e5d91399acda87c233b87ed99de5ab4e137c1fbc19a3bb9a87bff9060800160405180910390a150506001600055505050565b611d5c604051806060016040528060001515815260200160008152602001600081525090565b5060009182526008602090815260408084206001600160a01b03939093168452918152918190208151606081018352815460ff1615158152600182015493810193909352600201549082015290565b6001546001600160a01b03163314611dd55760405162461bcd60e51b81526004016109ab9061318e565b601e811015611e375760405162461bcd60e51b815260206004820152602860248201527f476f7665726e616e63653a3a736574457865637574696f6e44656c61793a205460448201526713d3d7d4d350531360c21b60648201526084016109ab565b62278d00811115611e9b5760405162461bcd60e51b815260206004820152602860248201527f476f7665726e616e63653a3a736574457865637574696f6e44656c61793a20546044820152674f4f5f4c4152474560c01b60648201526084016109ab565b60038190556040518181527f193d917ecb8a5c0270b102b28be14cc9ee25763c29c0b87e980a0bc65d485e7590602001610aa8565b6001546001600160a01b03163314611efa5760405162461bcd60e51b81526004016109ab9061318e565b61c350811015611f605760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e616e63653a3a73657450726f706f73616c5468726573686f6c6460448201526a0e881513d3d7d4d350531360aa1b60648201526084016109ab565b62989680811115611fc75760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e616e63653a3a73657450726f706f73616c5468726573686f6c6460448201526a3a20544f4f5f4c4152474560a81b60648201526084016109ab565b60058190556040518181527f0553c1e1d490599cc62884d38bddf3b538bf26581e3d5a830cb2aa0a54fc563390602001610aa8565b6001546001600160a01b031633146120265760405162461bcd60e51b81526004016109ab9061318e565b6001600160a01b03811661208b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109ab565b6120948161252f565b50565b6060600260005414156120ec5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109ab565b600260005560036120fc83610c7f565b600581111561210d5761210d612a92565b1461216a5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e616e63653a3a657865637574653a2063616e6e6f7420626520656044820152661e1958dd5d195960ca1b60648201526084016109ab565b60008281526007602052604090206009810154600a82019060609060ff16156123165781546001600160401b038111156121a6576121a6612b48565b6040519080825280602002602001820160405280156121d957816020015b60608152602001906001900390816121c45790505b50905060005b825481101561231057600080846001018381548110612200576122006131f1565b60009182526020909120600160049092020181015490860180546001600160a01b039092169185908110612236576122366131f1565b90600052602060002090600402016002015486600101858154811061225d5761225d6131f1565b906000526020600020906004020160030160405161227b9190613334565b60006040518083038185875af1925050503d80600081146122b8576040519150601f19603f3d011682016040523d82523d6000602084013e6122bd565b606091505b5091509150816122df5760405162461bcd60e51b81526004016109ab906133a6565b808484815181106122f2576122f26131f1565b602002602001018190525050508061230990613207565b90506121df565b506124d1565b60408051600180825281830190925290816020015b606081526020019060019003908161232b5750506006840154909150600090815b60088601548110156123b5578186600801828154811061236e5761236e6131f1565b906000526020600020015411156123a557856008018181548110612394576123946131f1565b906000526020600020015491508092505b6123ae81613207565b905061234c565b506000808560010184815481106123ce576123ce6131f1565b60009182526020909120600160049092020181015490870180546001600160a01b039092169186908110612404576124046131f1565b90600052602060002090600402016002015487600101868154811061242b5761242b6131f1565b90600052602060002090600402016003016040516124499190613334565b60006040518083038185875af1925050503d8060008114612486576040519150601f19603f3d011682016040523d82523d6000602084013e61248b565b606091505b5091509150816124ad5760405162461bcd60e51b81526004016109ab906133a6565b80856000815181106124c1576124c16131f1565b6020026020010181905250505050505b6003830180546001600160a01b031916339081179091556040805187815260208101929092527f9c85b616f29fca57a17eafe71cf9ff82ffef41766e2cf01ea7f8f7878dd3ec24910160405180910390a16001600055949350505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604051806101600160405280606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160608152602001600015158152602001612604604051806040016040528060008152602001606081525090565b905290565b82805461261590613153565b90600052602060002090601f016020900481019282612637576000855561267d565b82601f1061265057805160ff191683800117855561267d565b8280016001018555821561267d579182015b8281111561267d578251825591602001919060010190612662565b506126899291506126c7565b5090565b82805482825590600052602060002090810192821561267d579160200282018281111561267d578251825591602001919060010190612662565b5b8082111561268957600081556001016126c8565b6000602082840312156126ee57600080fd5b5035919050565b6000815180845260005b8181101561271b576020818501810151868301820152016126ff565b8181111561272d576000602083870101525b50601f01601f19169290920160200192915050565b60006040808401835185526020808501518382880152828151808552606094508489019150848160051b8a0101848401935060005b828110156127e457605f198b830301845284516080815181855261279d828601826126f5565b838a01516001600160a01b0316868b01528b8401518c870152928a01518584038b8701529291506127d0905081836126f5565b968801969588019593505050600101612777565b509998505050505050505050565b60006101408083526128068184018e6126f5565b9050828103602084015261281a818d6126f5565b6001600160a01b038c811660408601528b166060850152608084018a905260a0840189905260c0840188905260e08401879052851515610100850152838103610120850152905061286b8185612742565b9d9c50505050505050505050505050565b60008083601f84011261288e57600080fd5b5081356001600160401b038111156128a557600080fd5b6020830191508360208285010111156128bd57600080fd5b9250929050565b803580151581146128d457600080fd5b919050565b600080600080600080608087890312156128f257600080fd5b86356001600160401b038082111561290957600080fd5b6129158a838b0161287c565b9098509650602089013591508082111561292e57600080fd5b5061293b89828a0161287c565b90955093505060408701359150612954606088016128c4565b90509295509295509295565b600081518084526020808501945080840160005b8381101561299057815187529582019590820190600101612974565b509495945050505050565b60208152600082516101608060208501526129ba6101808501836126f5565b91506020850151601f19808685030160408701526129d884836126f5565b9350604087015191506129f660608701836001600160a01b03169052565b60608701516001600160a01b03811660808801529150608087015160a087015260a087015160c087015260c087015160e087015260e08701519150610100828188015280880151925050610120818786030181880152612a568584612960565b945080880151925050610140612a6f8188018415159052565b870151868503909101838701529050612a888382612742565b9695505050505050565b634e487b7160e01b600052602160045260246000fd5b6020810160068310612aca57634e487b7160e01b600052602160045260246000fd5b91905290565b80356001600160a01b03811681146128d457600080fd5b60008060408385031215612afa57600080fd5b82359150612b0a60208401612ad0565b90509250929050565b602081526000612b266020830184612960565b9392505050565b600060208284031215612b3f57600080fd5b612b2682612ad0565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715612b8057612b80612b48565b60405290565b604051608081016001600160401b0381118282101715612b8057612b80612b48565b60405161016081016001600160401b0381118282101715612b8057612b80612b48565b604051601f8201601f191681016001600160401b0381118282101715612bf357612bf3612b48565b604052919050565b60006001600160401b03831115612c1457612c14612b48565b612c27601f8401601f1916602001612bcb565b9050828152838383011115612c3b57600080fd5b828260208301376000602084830101529392505050565b600082601f830112612c6357600080fd5b612b2683833560208501612bfb565b60006001600160401b03821115612c8b57612c8b612b48565b5060051b60200190565b600082601f830112612ca657600080fd5b81356020612cbb612cb683612c72565b612bcb565b82815260059290921b84018101918181019086841115612cda57600080fd5b8286015b84811015612cf55780358352918301918301612cde565b509695505050505050565b60006040808385031215612d1357600080fd5b612d1b612b5e565b9150823582526020808401356001600160401b0380821115612d3c57600080fd5b818601915086601f830112612d5057600080fd5b8135612d5e612cb682612c72565b81815260059190911b83018401908481019089831115612d7d57600080fd5b8585015b83811015612e4257803585811115612d995760008081fd5b86016080818d03601f1901811315612db15760008081fd5b612db9612b86565b8983013588811115612dcb5760008081fd5b612dd98f8c83870101612c52565b825250612de78b8401612ad0565b818b01526060838101358c830152918301359188831115612e085760008081fd5b82840193508e603f850112612e1f57600092508283fd5b612e2f8f8c8601358e8701612bfb565b9082015285525050918601918601612d81565b5080868901525050505050505092915050565b60008060408385031215612e6857600080fd5b82356001600160401b0380821115612e7f57600080fd5b908401906101608287031215612e9457600080fd5b612e9c612ba8565b823582811115612eab57600080fd5b612eb788828601612c52565b825250602083013582811115612ecc57600080fd5b612ed888828601612c52565b602083015250612eea60408401612ad0565b6040820152612efb60608401612ad0565b60608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e08201526101008084013583811115612f3c57600080fd5b612f4889828701612c95565b828401525050610120612f5c8185016128c4565b908201526101408381013583811115612f7457600080fd5b612f8089828701612d00565b828401525050809450506020850135915080821115612f9e57600080fd5b50612fab85828601612d00565b9150509250929050565b60008083601f840112612fc757600080fd5b5081356001600160401b03811115612fde57600080fd5b6020830191508360208260051b85010111156128bd57600080fd5b6000806000806000806000806080898b03121561301557600080fd5b88356001600160401b038082111561302c57600080fd5b6130388c838d01612fb5565b909a50985060208b013591508082111561305157600080fd5b61305d8c838d01612fb5565b909850965060408b013591508082111561307657600080fd5b6130828c838d01612fb5565b909650945060608b013591508082111561309b57600080fd5b506130a88b828c01612fb5565b999c989b5096995094979396929594505050565b602081526000612b266020830184612742565b600080604083850312156130e257600080fd5b50508035926020909101359150565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561314657603f198886030184526131348583516126f5565b94509285019290850190600101613118565b5092979650505050505050565b600181811c9082168061316757607f821691505b6020821081141561318857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156131ec576131ec6131c3565b500190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561321b5761321b6131c3565b5060010190565b60006020828403121561323457600080fd5b5051919050565b8381526000602060018060a01b03851681840152606060408401526000845461326381613153565b80606087015260806001808416600081146132855760018114613299576132c7565b60ff1985168984015260a0890195506132c7565b896000528660002060005b858110156132bf5781548b82018601529083019088016132a4565b8a0184019650505b50939a9950505050505050505050565b6000808335601e198436030181126132ee57600080fd5b8301803591506001600160401b0382111561330857600080fd5b6020019150368190038213156128bd57600080fd5b60008282101561332f5761332f6131c3565b500390565b600080835461334281613153565b6001828116801561335a576001811461336b5761339a565b60ff1984168752828701945061339a565b8760005260208060002060005b858110156133915781548a820152908401908201613378565b50505082870194505b50929695505050505050565b60208082526034908201527f476f7665726e616e63653a3a657865637574653a207472616e73616374696f6e6040820152731032bc32b1baba34b7b7103932bb32b93a32b21760611b60608201526080019056fea264697066735822122031ef345b9dde6b63f8e12e02969052f0f75ca5b12680b39a25e6df413272bf3064736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "This token must not be tradeable",
        "params": {
          "_sAXIAL": "the address of the contract which determines each users voting power"
        }
      },
      "execute(uint256)": {
        "params": {
          "_proposalId": "the index of the proposal we wish to execute"
        },
        "returns": {
          "_0": "bytes array the executed function/s returned"
        }
      },
      "getReceipt(uint256,address)": {
        "params": {
          "_proposalId": "the index of the proposal we wish to view the receipt for",
          "_voter": "the user we wish to view the receipt for"
        },
        "returns": {
          "_0": "Receipt A copy of the voters selection for the provided proposal"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "propose((string,string,address,address,uint256,uint256,uint256,uint256,uint256[],bool,(uint256,(string,address,uint256,bytes)[])),(uint256,(string,address,uint256,bytes)[]))": {
        "params": {
          "_executionContexts": "Execution struct generated via constructExecutionContexts",
          "_metaData": "Metadata struct generated via constructProposalMetadata"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "state(uint256)": {
        "params": {
          "_proposalId": "the index of the proposal we wish to view the State of"
        },
        "returns": {
          "_0": "ProposalState enum representing the status of the selected proposal"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "vote(uint256,uint256)": {
        "details": "If the proposal is binary, 0 means No and 1 means Yes",
        "params": {
          "_proposalId": "the index of the proposal the user wishes to vote for or against",
          "_support": "index of the option the user wishes to cast their vote for"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "EXPIRATION_PERIOD()": {
        "notice": "Seconds since the proposal could be executed until it is considered expired"
      },
      "constructor": {
        "notice": "Constructor"
      },
      "execute(uint256)": {
        "notice": "Allow any user to execute the proposal if it is in the execution stage"
      },
      "executionDelay()": {
        "notice": "Seconds since the end of the voting period before the proposal can be executed"
      },
      "minimumVotingPeriod()": {
        "notice": "Lower bound for the voting period"
      },
      "proposalCount()": {
        "notice": "The total number of proposals"
      },
      "proposalThreshold()": {
        "notice": "The minimum number of votes required for an account to create a proposal"
      },
      "proposals(uint256)": {
        "notice": "The record of all proposals ever proposed"
      },
      "propose((string,string,address,address,uint256,uint256,uint256,uint256,uint256[],bool,(uint256,(string,address,uint256,bytes)[])),(uint256,(string,address,uint256,bytes)[]))": {
        "notice": "Allows any user with sufficient priviledges to propose a new vote"
      },
      "quorumVotes()": {
        "notice": "The required minimum number of votes in support of a proposal for it to succeed"
      },
      "sAXIAL()": {
        "notice": "Non-tradeable sAXIAL used to represent votes"
      },
      "state(uint256)": {
        "notice": "View the current status of any proposal"
      },
      "vote(uint256,uint256)": {
        "notice": "Vote for selected option"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 115,
        "contract": "contracts/Governance.sol:Governance",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 7,
        "contract": "contracts/Governance.sol:Governance",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 5021,
        "contract": "contracts/Governance.sol:Governance",
        "label": "minimumVotingPeriod",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 5031,
        "contract": "contracts/Governance.sol:Governance",
        "label": "executionDelay",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 5045,
        "contract": "contracts/Governance.sol:Governance",
        "label": "quorumVotes",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 5055,
        "contract": "contracts/Governance.sol:Governance",
        "label": "proposalThreshold",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 5064,
        "contract": "contracts/Governance.sol:Governance",
        "label": "proposalCount",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 5070,
        "contract": "contracts/Governance.sol:Governance",
        "label": "proposals",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_struct(Proposal)5110_storage)"
      },
      {
        "astId": 5077,
        "contract": "contracts/Governance.sol:Governance",
        "label": "receipts",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Receipt)5133_storage))"
      },
      {
        "astId": 5081,
        "contract": "contracts/Governance.sol:Governance",
        "label": "lastProposalByAddress",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 5085,
        "contract": "contracts/Governance.sol:Governance",
        "label": "sAXIAL",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(IsAxial)5013"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(ProposalExecutionContext)5119_storage)dyn_storage": {
        "base": "t_struct(ProposalExecutionContext)5119_storage",
        "encoding": "dynamic_array",
        "label": "struct Governance.ProposalExecutionContext[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IsAxial)5013": {
        "encoding": "inplace",
        "label": "contract IsAxial",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Receipt)5133_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Governance.Receipt)",
        "numberOfBytes": "32",
        "value": "t_struct(Receipt)5133_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_struct(Receipt)5133_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => struct Governance.Receipt))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(Receipt)5133_storage)"
      },
      "t_mapping(t_uint256,t_struct(Proposal)5110_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Governance.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)5110_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)5110_storage": {
        "encoding": "inplace",
        "label": "struct Governance.Proposal",
        "members": [
          {
            "astId": 5087,
            "contract": "contracts/Governance.sol:Governance",
            "label": "title",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 5089,
            "contract": "contracts/Governance.sol:Governance",
            "label": "metadata",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 5091,
            "contract": "contracts/Governance.sol:Governance",
            "label": "proposer",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 5093,
            "contract": "contracts/Governance.sol:Governance",
            "label": "executor",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 5095,
            "contract": "contracts/Governance.sol:Governance",
            "label": "startTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 5097,
            "contract": "contracts/Governance.sol:Governance",
            "label": "votingPeriod",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 5099,
            "contract": "contracts/Governance.sol:Governance",
            "label": "quorumVotes",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 5101,
            "contract": "contracts/Governance.sol:Governance",
            "label": "executionDelay",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 5104,
            "contract": "contracts/Governance.sol:Governance",
            "label": "votes",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 5106,
            "contract": "contracts/Governance.sol:Governance",
            "label": "isBoolean",
            "offset": 0,
            "slot": "9",
            "type": "t_bool"
          },
          {
            "astId": 5109,
            "contract": "contracts/Governance.sol:Governance",
            "label": "executionContexts",
            "offset": 0,
            "slot": "10",
            "type": "t_struct(ProposalExecutionContextList)5126_storage"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_struct(ProposalExecutionContext)5119_storage": {
        "encoding": "inplace",
        "label": "struct Governance.ProposalExecutionContext",
        "members": [
          {
            "astId": 5112,
            "contract": "contracts/Governance.sol:Governance",
            "label": "label",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 5114,
            "contract": "contracts/Governance.sol:Governance",
            "label": "target",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 5116,
            "contract": "contracts/Governance.sol:Governance",
            "label": "value",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 5118,
            "contract": "contracts/Governance.sol:Governance",
            "label": "data",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(ProposalExecutionContextList)5126_storage": {
        "encoding": "inplace",
        "label": "struct Governance.ProposalExecutionContextList",
        "members": [
          {
            "astId": 5121,
            "contract": "contracts/Governance.sol:Governance",
            "label": "length",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 5125,
            "contract": "contracts/Governance.sol:Governance",
            "label": "contexts",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_struct(ProposalExecutionContext)5119_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Receipt)5133_storage": {
        "encoding": "inplace",
        "label": "struct Governance.Receipt",
        "members": [
          {
            "astId": 5128,
            "contract": "contracts/Governance.sol:Governance",
            "label": "hasVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 5130,
            "contract": "contracts/Governance.sol:Governance",
            "label": "support",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 5132,
            "contract": "contracts/Governance.sol:Governance",
            "label": "votes",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}