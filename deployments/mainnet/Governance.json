{
  "address": "0x827F874167fC620B4F13a2a3D2AA2E453b62712b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sAXIAL",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newExecutionDelay",
          "type": "uint256"
        }
      ],
      "name": "ExecutionDelayChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMinimumVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "MinimumVotingPeriodChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "support",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "name": "NewVote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "title",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "executor",
          "type": "address"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newProposalThreshold",
          "type": "uint256"
        }
      ],
      "name": "ProposalThresholdChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newQuorumVotes",
          "type": "uint256"
        }
      ],
      "name": "QuorumVotesChanges",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "EXECUTION_DELAY_MAXIMUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EXECUTION_DELAY_MINIMUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EXPIRATION_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROPOSAL_THRESHOLD_MAXIMUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROPOSAL_THRESHOLD_MINIMUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "QUORUM_VOTES_MAXIMUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "QUORUM_VOTES_MINIMUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VOTING_PERIOD_MAXIMUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VOTING_PERIOD_MINIMUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_labels",
          "type": "string[]"
        },
        {
          "internalType": "address[]",
          "name": "_targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "_data",
          "type": "bytes[]"
        }
      ],
      "name": "constructProposalExecutionContexts",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "label",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Governance.ProposalExecutionContext[]",
              "name": "contexts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Governance.ProposalExecutionContextList",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_metadata",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_votingPeriod",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isBoolean",
          "type": "bool"
        }
      ],
      "name": "constructProposalMetadata",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "executor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votingPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quorumVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "executionDelay",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "votes",
              "type": "uint256[]"
            },
            {
              "internalType": "bool",
              "name": "isBoolean",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "length",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "label",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "target",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Governance.ProposalExecutionContext[]",
                  "name": "contexts",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct Governance.ProposalExecutionContextList",
              "name": "executionContexts",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governance.Proposal",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executionDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposalVotes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "support",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votes",
              "type": "uint256"
            }
          ],
          "internalType": "struct Governance.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastProposalByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumVotingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "metadata",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votingPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quorumVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "executionDelay",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isBoolean",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "label",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Governance.ProposalExecutionContext[]",
              "name": "contexts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Governance.ProposalExecutionContextList",
          "name": "executionContexts",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "executor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votingPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quorumVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "executionDelay",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "votes",
              "type": "uint256[]"
            },
            {
              "internalType": "bool",
              "name": "isBoolean",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "length",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "label",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "target",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Governance.ProposalExecutionContext[]",
                  "name": "contexts",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct Governance.ProposalExecutionContextList",
              "name": "executionContexts",
              "type": "tuple"
            }
          ],
          "internalType": "struct Governance.Proposal",
          "name": "_metaData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "label",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Governance.ProposalExecutionContext[]",
              "name": "contexts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Governance.ProposalExecutionContextList",
          "name": "_executionContexts",
          "type": "tuple"
        }
      ],
      "name": "propose",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "receipts",
      "outputs": [
        {
          "internalType": "bool",
          "name": "hasVoted",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "support",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sAXIAL",
      "outputs": [
        {
          "internalType": "contract IsAxial",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_seconds",
          "type": "uint256"
        }
      ],
      "name": "setExecutionDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_seconds",
          "type": "uint256"
        }
      ],
      "name": "setMinimumVotingPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_votes",
          "type": "uint256"
        }
      ],
      "name": "setProposalThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_votes",
          "type": "uint256"
        }
      ],
      "name": "setQuorumVotes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum Governance.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_support",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x68c873424691b0cc71cd3969b2c02606d686fc89aa545d4f078071dcd7498e6a",
  "receipt": {
    "to": null,
    "from": "0xF5f08Ba7F46e2a86b5ef3BFD56c2097C9f4276D7",
    "contractAddress": "0x827F874167fC620B4F13a2a3D2AA2E453b62712b",
    "transactionIndex": 6,
    "gasUsed": "3100043",
    "logsBloom": "0x
    "blockHash": "0x29631cff708bc14b16629ced4e417727e2844b9f45d9be1cb762331ffd89a1b6",
    "transactionHash": "0x68c873424691b0cc71cd3969b2c02606d686fc89aa545d4f078071dcd7498e6a",
    "logs": [
      {
        "transactionIndex": 6,
        "blockNumber": 15060442,
        "transactionHash": "0x68c873424691b0cc71cd3969b2c02606d686fc89aa545d4f078071dcd7498e6a",
        "address": "0x827F874167fC620B4F13a2a3D2AA2E453b62712b",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f5f08ba7f46e2a86b5ef3bfd56c2097c9f4276d7"
        ],
        "data": "0x",
        "logIndex": 72,
        "blockHash": "0x29631cff708bc14b16629ced4e417727e2844b9f45d9be1cb762331ffd89a1b6"
      }
    ],
    "blockNumber": 15060442,
    "cumulativeGasUsed": "6121394",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xb7819A8714fCa85239E4b881291819A79Aa703E4"
  ],
  "numDeployments": 2,
  "solcInputHash": "7a89b9aab79d6d90b73145d6c1419cdd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sAXIAL\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newExecutionDelay\",\"type\":\"uint256\"}],\"name\":\"ExecutionDelayChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinimumVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"MinimumVotingPeriodChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"name\":\"NewVote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newQuorumVotes\",\"type\":\"uint256\"}],\"name\":\"QuorumVotesChanges\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EXECUTION_DELAY_MAXIMUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXECUTION_DELAY_MINIMUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXPIRATION_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROPOSAL_THRESHOLD_MAXIMUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROPOSAL_THRESHOLD_MINIMUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUORUM_VOTES_MAXIMUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUORUM_VOTES_MINIMUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTING_PERIOD_MAXIMUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTING_PERIOD_MINIMUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_labels\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"_targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"constructProposalExecutionContexts\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Governance.ProposalExecutionContext[]\",\"name\":\"contexts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Governance.ProposalExecutionContextList\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_metadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_votingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isBoolean\",\"type\":\"bool\"}],\"name\":\"constructProposalMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quorumVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"votes\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"isBoolean\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Governance.ProposalExecutionContext[]\",\"name\":\"contexts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Governance.ProposalExecutionContextList\",\"name\":\"executionContexts\",\"type\":\"tuple\"}],\"internalType\":\"struct Governance.Proposal\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executionDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"internalType\":\"struct Governance.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastProposalByAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumVotingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quorumVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionDelay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isBoolean\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Governance.ProposalExecutionContext[]\",\"name\":\"contexts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Governance.ProposalExecutionContextList\",\"name\":\"executionContexts\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quorumVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"votes\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"isBoolean\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Governance.ProposalExecutionContext[]\",\"name\":\"contexts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Governance.ProposalExecutionContextList\",\"name\":\"executionContexts\",\"type\":\"tuple\"}],\"internalType\":\"struct Governance.Proposal\",\"name\":\"_metaData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Governance.ProposalExecutionContext[]\",\"name\":\"contexts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Governance.ProposalExecutionContextList\",\"name\":\"_executionContexts\",\"type\":\"tuple\"}],\"name\":\"propose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receipts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"support\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sAXIAL\",\"outputs\":[{\"internalType\":\"contract IsAxial\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seconds\",\"type\":\"uint256\"}],\"name\":\"setExecutionDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seconds\",\"type\":\"uint256\"}],\"name\":\"setMinimumVotingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_votes\",\"type\":\"uint256\"}],\"name\":\"setProposalThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_votes\",\"type\":\"uint256\"}],\"name\":\"setQuorumVotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum Governance.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_support\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"This token must not be tradeable\",\"params\":{\"_sAXIAL\":\"the address of the contract which determines each users voting power\"}},\"execute(uint256)\":{\"params\":{\"_proposalId\":\"the index of the proposal we wish to execute\"},\"returns\":{\"_0\":\"bytes array the executed function/s returned\"}},\"getReceipt(uint256,address)\":{\"params\":{\"_proposalId\":\"the index of the proposal we wish to view the receipt for\",\"_voter\":\"the user we wish to view the receipt for\"},\"returns\":{\"_0\":\"Receipt A copy of the voters selection for the provided proposal\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"propose((string,string,address,address,uint256,uint256,uint256,uint256,uint256[],bool,(uint256,(string,address,uint256,bytes)[])),(uint256,(string,address,uint256,bytes)[]))\":{\"params\":{\"_executionContexts\":\"Execution struct generated via constructExecutionContexts\",\"_metaData\":\"Metadata struct generated via constructProposalMetadata\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"state(uint256)\":{\"params\":{\"_proposalId\":\"the index of the proposal we wish to view the State of\"},\"returns\":{\"_0\":\"ProposalState enum representing the status of the selected proposal\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vote(uint256,uint256)\":{\"details\":\"If the proposal is binary, 0 means No and 1 means Yes\",\"params\":{\"_proposalId\":\"the index of the proposal the user wishes to vote for or against\",\"_support\":\"index of the option the user wishes to cast their vote for\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"EXPIRATION_PERIOD()\":{\"notice\":\"Seconds since the proposal could be executed until it is considered expired\"},\"constructor\":{\"notice\":\"Constructor\"},\"execute(uint256)\":{\"notice\":\"Allow any user to execute the proposal if it is in the execution stage\"},\"executionDelay()\":{\"notice\":\"Seconds since the end of the voting period before the proposal can be executed\"},\"minimumVotingPeriod()\":{\"notice\":\"Lower bound for the voting period\"},\"proposalCount()\":{\"notice\":\"The total number of proposals\"},\"proposalThreshold()\":{\"notice\":\"The minimum number of votes required for an account to create a proposal\"},\"proposals(uint256)\":{\"notice\":\"The record of all proposals ever proposed\"},\"propose((string,string,address,address,uint256,uint256,uint256,uint256,uint256[],bool,(uint256,(string,address,uint256,bytes)[])),(uint256,(string,address,uint256,bytes)[]))\":{\"notice\":\"Allows any user with sufficient priviledges to propose a new vote\"},\"quorumVotes()\":{\"notice\":\"The required minimum number of votes in support of a proposal for it to succeed\"},\"sAXIAL()\":{\"notice\":\"Non-tradeable sAXIAL used to represent votes\"},\"state(uint256)\":{\"notice\":\"View the current status of any proposal\"},\"vote(uint256,uint256)\":{\"notice\":\"Vote for selected option\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Governance.sol\":\"Governance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Governance.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.9;\\r\\n\\r\\n/// @title A governance contract for proposals, voting, and execution\\r\\n/// @author Auroter\\r\\n/// @notice Uses the StakedAxial contract to determine users voting power\\r\\n/// @notice Multiple executions can be included in a single yes/no proposal\\r\\n/// @notice Multiple-choice proposals are also valid and can be used to select a specific execution context\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\ninterface IsAxial {\\r\\n  function balanceOf(address _account) external view returns (uint256);\\r\\n}\\r\\n\\r\\ncontract Governance is ReentrancyGuard, Ownable {\\r\\n\\r\\n    /// @notice Lower bound for the voting period\\r\\n    uint256 public minimumVotingPeriod = 3 days;\\r\\n    uint256 public constant VOTING_PERIOD_MINIMUM = 1 days;\\r\\n    uint256 public constant VOTING_PERIOD_MAXIMUM = 30 days;\\r\\n\\r\\n    /// @notice Seconds since the end of the voting period before the proposal can be executed\\r\\n    uint256 public executionDelay = 24 hours;\\r\\n    uint256 public constant EXECUTION_DELAY_MINIMUM = 30 seconds;\\r\\n    uint256 public constant EXECUTION_DELAY_MAXIMUM = 30 days;\\r\\n\\r\\n    /// @notice Seconds since the proposal could be executed until it is considered expired\\r\\n    uint256 public constant EXPIRATION_PERIOD = 14 days;\\r\\n\\r\\n    /// @notice The required minimum number of votes in support of a proposal for it to succeed\\r\\n    uint256 public quorumVotes = 10_000_000;\\r\\n    uint256 public constant QUORUM_VOTES_MINIMUM = 3_650_000;\\r\\n    uint256 public constant QUORUM_VOTES_MAXIMUM = 365_000_000;\\r\\n\\r\\n    /// @notice The minimum number of votes required for an account to create a proposal\\r\\n    uint256 public proposalThreshold = 200_000;\\r\\n    uint256 public constant PROPOSAL_THRESHOLD_MINIMUM = 100_000;\\r\\n    uint256 public constant PROPOSAL_THRESHOLD_MAXIMUM = 180_000_000;\\r\\n\\r\\n    /// @notice The total number of proposals\\r\\n    uint256 public proposalCount;\\r\\n\\r\\n    /// @notice The record of all proposals ever proposed\\r\\n    mapping(uint256 => Proposal) public proposals;\\r\\n    mapping(uint256 => mapping(address => Receipt)) public receipts;\\r\\n    mapping(address => uint256) public lastProposalByAddress;\\r\\n\\r\\n    /// @notice Non-tradeable sAXIAL used to represent votes\\r\\n    IsAxial public sAXIAL;\\r\\n\\r\\n    struct Proposal {\\r\\n        string title;\\r\\n        string metadata;\\r\\n        address proposer;\\r\\n        address executor;\\r\\n        uint256 startTime;\\r\\n        uint256 votingPeriod;\\r\\n        uint256 quorumVotes;\\r\\n        uint256 executionDelay;\\r\\n        uint256[] votes;\\r\\n        bool isBoolean;\\r\\n        ProposalExecutionContextList executionContexts;\\r\\n    }\\r\\n\\r\\n    struct ProposalExecutionContext {\\r\\n        string label; // Description of execution context\\r\\n        address target; // The contract we wish to manipulate\\r\\n        uint256 value; // We set this if the function requires native AVAX\\r\\n        bytes data; // *encoded* function and parameters being executed at target\\r\\n    }\\r\\n\\r\\n    struct ProposalExecutionContextList {\\r\\n        uint256 length;\\r\\n        ProposalExecutionContext[] contexts;\\r\\n    }\\r\\n\\r\\n    struct Receipt {\\r\\n        bool hasVoted; // did the user vote\\r\\n        uint256 support; // what did user vote for?\\r\\n        uint256 votes; // weight of the users vote\\r\\n    }\\r\\n\\r\\n    enum ProposalState {\\r\\n        Active,\\r\\n        Defeated,\\r\\n        PendingExecution,\\r\\n        ReadyForExecution,\\r\\n        Executed,\\r\\n        Expired\\r\\n    }\\r\\n\\r\\n    // emitted whenever a user votes\\r\\n    event NewVote(\\r\\n        uint256 proposalId,\\r\\n        address voter,\\r\\n        uint256 support,\\r\\n        uint256 votes\\r\\n    );\\r\\n\\r\\n    event ProposalCreated(uint256 proposalId, address proposer, string title);\\r\\n    event ProposalExecuted(uint256 proposalId, address executor);\\r\\n    event MinimumVotingPeriodChanged(uint256 newMinimumVotingPeriod);\\r\\n    event ExecutionDelayChanged(uint256 newExecutionDelay);\\r\\n    event QuorumVotesChanges(uint256 newQuorumVotes);\\r\\n    event ProposalThresholdChanged(uint256 newProposalThreshold);\\r\\n\\r\\n    /// @notice Constructor\\r\\n    /// @param _sAXIAL the address of the contract which determines each users voting power\\r\\n    /// @dev This token must not be tradeable\\r\\n    constructor(address _sAXIAL) {\\r\\n        sAXIAL = IsAxial(_sAXIAL);\\r\\n    }\\r\\n\\r\\n    function getProposalVotes(uint256 proposalId) public view returns (uint256[] memory) {\\r\\n        return proposals[proposalId].votes;\\r\\n    }\\r\\n\\r\\n    // Setters\\r\\n\\r\\n    function setMinimumVotingPeriod(uint256 _seconds) public onlyOwner {\\r\\n        require(\\r\\n            _seconds >= VOTING_PERIOD_MINIMUM,\\r\\n            \\\"Governance::setMinimumVotingPeriod: TOO_SMALL\\\"\\r\\n        );\\r\\n        require(\\r\\n            _seconds <= VOTING_PERIOD_MAXIMUM,\\r\\n            \\\"Governance::setMinimumVotingPeriod: TOO_LARGE\\\"\\r\\n        );\\r\\n        minimumVotingPeriod = _seconds;\\r\\n        emit MinimumVotingPeriodChanged(_seconds);\\r\\n    }\\r\\n\\r\\n    function setExecutionDelay(uint256 _seconds) public onlyOwner {\\r\\n        require(\\r\\n            _seconds >= EXECUTION_DELAY_MINIMUM,\\r\\n            \\\"Governance::setExecutionDelay: TOO_SMALL\\\"\\r\\n        );\\r\\n        require(\\r\\n            _seconds <= EXECUTION_DELAY_MAXIMUM,\\r\\n            \\\"Governance::setExecutionDelay: TOO_LARGE\\\"\\r\\n        );\\r\\n        executionDelay = _seconds;\\r\\n        emit ExecutionDelayChanged(_seconds);\\r\\n    }\\r\\n\\r\\n    function setQuorumVotes(uint256 _votes) public onlyOwner {\\r\\n        require(\\r\\n            _votes >= QUORUM_VOTES_MINIMUM,\\r\\n            \\\"Governance::setQuorumVotes: TOO_SMALL\\\"\\r\\n        );\\r\\n        require(\\r\\n            _votes <= QUORUM_VOTES_MAXIMUM,\\r\\n            \\\"Governance::setQuorumVotes: TOO_LARGE\\\"\\r\\n        );\\r\\n        quorumVotes = _votes;\\r\\n        emit QuorumVotesChanges(_votes);\\r\\n    }\\r\\n\\r\\n    function setProposalThreshold(uint256 _votes) public onlyOwner {\\r\\n        require(\\r\\n            _votes >= PROPOSAL_THRESHOLD_MINIMUM,\\r\\n            \\\"Governance::setProposalThreshold: TOO_SMALL\\\"\\r\\n        );\\r\\n        require(\\r\\n            _votes <= PROPOSAL_THRESHOLD_MAXIMUM,\\r\\n            \\\"Governance::setProposalThreshold: TOO_LARGE\\\"\\r\\n        );\\r\\n        proposalThreshold = _votes;\\r\\n        emit ProposalThresholdChanged(_votes);\\r\\n    }\\r\\n\\r\\n    /// @notice View the current status of any proposal\\r\\n    /// @param _proposalId the index of the proposal we wish to view the State of\\r\\n    /// @return ProposalState enum representing the status of the selected proposal\\r\\n    function state(uint256 _proposalId) public view returns (ProposalState) {\\r\\n        require(\\r\\n            _proposalId < proposalCount,\\r\\n            \\\"Governance::state: invalid proposal id\\\"\\r\\n        );\\r\\n\\r\\n        Proposal memory proposal = proposals[_proposalId];\\r\\n\\r\\n        // These states are each being a precondition of the next state\\r\\n\\r\\n        // The proposal is currently allowing votes\\r\\n        if (block.timestamp <= proposal.startTime + proposal.votingPeriod) {\\r\\n            return ProposalState.Active;\\r\\n        }\\r\\n\\r\\n        // The proposal is no longer allowing votes and has been executed\\r\\n        if (proposal.executor != address(0)) {\\r\\n            return ProposalState.Executed;\\r\\n        }\\r\\n\\r\\n        // The proposal is yes/no and the yes votes did not exceed the no votes, or the yes notes did not exceed quorum\\r\\n        if (proposal.isBoolean && (proposal.votes[1] <= proposal.votes[0] || proposal.votes[1] < proposal.quorumVotes)) {\\r\\n            return ProposalState.Defeated;\\r\\n        }\\r\\n\\r\\n        // The proposal is multiple choice and none of the choices exceeded quorum\\r\\n        if (!proposal.isBoolean) {\\r\\n            bool multipleChoiceDefeated = true;\\r\\n            for (uint256 i = 0; i < proposal.votes.length; ++i) {\\r\\n                if (proposal.votes[i] >= proposal.quorumVotes) {\\r\\n                    multipleChoiceDefeated = false;\\r\\n                }\\r\\n            }\\r\\n            if (multipleChoiceDefeated) {\\r\\n                return ProposalState.Defeated;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // We are still in the execution delay window\\r\\n        if (block.timestamp < proposal.startTime + proposal.votingPeriod + proposal.executionDelay) {\\r\\n            return ProposalState.PendingExecution;\\r\\n        }\\r\\n\\r\\n        // We have not yet exceeded the expiration period\\r\\n        if (block.timestamp < proposal.startTime + proposal.votingPeriod + proposal.executionDelay + EXPIRATION_PERIOD) {\\r\\n            return ProposalState.ReadyForExecution;\\r\\n        }\\r\\n\\r\\n        // None of the previous conditions were met therefore the proposal has expired\\r\\n        return ProposalState.Expired;\\r\\n    }\\r\\n\\r\\n    /// @param _proposalId the index of the proposal we wish to view the receipt for\\r\\n    /// @param _voter the user we wish to view the receipt for\\r\\n    /// @return Receipt A copy of the voters selection for the provided proposal\\r\\n    function getReceipt(uint256 _proposalId, address _voter) public view returns (Receipt memory) {\\r\\n        return receipts[_proposalId][_voter];\\r\\n    }\\r\\n\\r\\n    function constructProposalExecutionContexts(string[] calldata _labels, \\r\\n                                               address[] calldata _targets, \\r\\n                                               uint256[] calldata _values, \\r\\n                                               bytes[] calldata _data) \\r\\n                                               public pure returns (ProposalExecutionContextList memory) {\\r\\n        require(_labels.length == _targets.length && _targets.length == _values.length && _values.length == _data.length, \\\"!length\\\");\\r\\n        uint256 length = _labels.length;\\r\\n        ProposalExecutionContextList memory list;\\r\\n        list.length = length;\\r\\n        list.contexts = new ProposalExecutionContext[](length);\\r\\n            for (uint256 i = 0; i < length; ++i) {\\r\\n                ProposalExecutionContext memory newProposalExecutionContext = ProposalExecutionContext({\\r\\n                    label: _labels[i],\\r\\n                    target: _targets[i],\\r\\n                    value: _values[i],\\r\\n                    data: _data[i]\\r\\n                });\\r\\n\\r\\n                list.contexts[i] = newProposalExecutionContext;\\r\\n            }\\r\\n        return list;\\r\\n    }\\r\\n\\r\\n    function constructProposalMetadata(string calldata _title, \\r\\n                                       string calldata _metadata, \\r\\n                                       uint256 _votingPeriod, \\r\\n                                       bool _isBoolean) \\r\\n                                       public pure returns (Proposal memory) {\\r\\n        Proposal memory metaData;\\r\\n        metaData.title = _title;\\r\\n        metaData.metadata = _metadata;\\r\\n        metaData.votingPeriod = _votingPeriod;\\r\\n        metaData.isBoolean = _isBoolean;\\r\\n        return metaData;\\r\\n    }\\r\\n\\r\\n    /// @notice Allows any user with sufficient priviledges to propose a new vote\\r\\n    /// @param _metaData Metadata struct generated via constructProposalMetadata\\r\\n    /// @param _executionContexts Execution struct generated via constructExecutionContexts\\r\\n    function propose(\\r\\n        Proposal memory _metaData,\\r\\n        ProposalExecutionContextList memory _executionContexts\\r\\n    ) public  {\\r\\n        require(_executionContexts.length == _executionContexts.contexts.length,\\r\\n            \\\"Governance::propose: Malformed execution contexts list\\\"\\r\\n        );\\r\\n\\r\\n        require(\\r\\n            _metaData.votingPeriod >= minimumVotingPeriod,\\r\\n            \\\"Governance::propose: voting period too short\\\"\\r\\n        );\\r\\n\\r\\n        require(\\r\\n            _metaData.votingPeriod <= VOTING_PERIOD_MAXIMUM,\\r\\n            \\\"Governance::propose: voting period too long\\\"\\r\\n        );\\r\\n\\r\\n        uint256 lastProposalId = lastProposalByAddress[msg.sender];\\r\\n\\r\\n        // Prevent the same person from having concurrent proposals\\r\\n        if (lastProposalId > 0) {\\r\\n            ProposalState proposalState = state(lastProposalId);\\r\\n            require(\\r\\n                proposalState == ProposalState.Executed ||\\r\\n                proposalState == ProposalState.Defeated ||\\r\\n                proposalState == ProposalState.Expired,\\r\\n                \\\"Governance::propose: proposer already has a proposal in progress\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        uint256 votes = sAXIAL.balanceOf(msg.sender);\\r\\n\\r\\n        // user needs to have enough voting power to be allowed to propose\\r\\n        require(\\r\\n            votes > proposalThreshold,\\r\\n            \\\"Governance::propose: proposer votes below proposal threshold\\\"\\r\\n        );\\r\\n\\r\\n        // Allocate voting options\\r\\n        uint256[] memory isMultipleChoice;\\r\\n        if (!_metaData.isBoolean) {\\r\\n            isMultipleChoice = new uint256[](_executionContexts.length);\\r\\n        } else {\\r\\n            isMultipleChoice = new uint256[](2); // 0: No, 1: Yes\\r\\n        }\\r\\n\\r\\n        Proposal storage newProposal = proposals[proposalCount];\\r\\n        // newProposal.votes = new uint256[](0);\\r\\n\\r\\n        // if (!_metaData.isBoolean) {\\r\\n        //     for (uint256 i = 0; i < _executionContexts.length; ++i) {\\r\\n        //         newProposal.votes.push(0); // A, B, C ...\\r\\n        //     }\\r\\n        // } else {\\r\\n        //     newProposal.votes.push(0); // No\\r\\n        //     newProposal.votes.push(0); // Yes\\r\\n        // }\\r\\n\\r\\n        newProposal.title = _metaData.title;\\r\\n        newProposal.metadata = _metaData.metadata;\\r\\n        newProposal.proposer = msg.sender;\\r\\n        newProposal.executor = address(0);\\r\\n        newProposal.startTime = block.timestamp;\\r\\n        newProposal.votingPeriod = _metaData.votingPeriod;\\r\\n        newProposal.quorumVotes = quorumVotes;\\r\\n        newProposal.executionDelay = executionDelay;\\r\\n        newProposal.votes = isMultipleChoice;\\r\\n        newProposal.isBoolean = _metaData.isBoolean;\\r\\n        for (uint256 i = 0; i < _executionContexts.length; ++i) {\\r\\n            newProposal.executionContexts.contexts.push(_executionContexts.contexts[i]);\\r\\n        }\\r\\n        newProposal.executionContexts.length = _executionContexts.length;\\r\\n\\r\\n\\r\\n        //Save new proposal to state\\r\\n        //proposals[proposalCount] = newProposal;\\r\\n        lastProposalByAddress[msg.sender] = proposalCount;\\r\\n\\r\\n        ++proposalCount;\\r\\n\\r\\n        emit ProposalCreated(proposalCount, newProposal.proposer, newProposal.title);\\r\\n    }\\r\\n\\r\\n    /// @notice Vote for selected option\\r\\n    /// @param _proposalId the index of the proposal the user wishes to vote for or against\\r\\n    /// @param _support index of the option the user wishes to cast their vote for\\r\\n    /// @dev If the proposal is binary, 0 means No and 1 means Yes\\r\\n    function vote(uint256 _proposalId, uint256 _support) public nonReentrant {\\r\\n        require(\\r\\n            state(_proposalId) == ProposalState.Active,\\r\\n            \\\"Governance::vote: voting is closed\\\"\\r\\n        );\\r\\n\\r\\n        // directly talk to state memory\\r\\n        Proposal storage proposal = proposals[_proposalId];\\r\\n        Receipt storage receipt = receipts[_proposalId][msg.sender];\\r\\n\\r\\n        uint256 votes = sAXIAL.balanceOf(msg.sender);\\r\\n\\r\\n        // Remove any previous votes if the user cast them already\\r\\n        if (receipt.hasVoted) {\\r\\n            proposal.votes[receipt.support] -= receipt.votes;\\r\\n        }\\r\\n\\r\\n        // Increment votes for option user has now selected\\r\\n        proposal.votes[_support] += votes;\\r\\n\\r\\n        // Update users receipt\\r\\n        receipt.hasVoted = true;\\r\\n        receipt.support = _support;\\r\\n        receipt.votes = votes;\\r\\n\\r\\n        emit NewVote(_proposalId, msg.sender, _support, votes);\\r\\n    }\\r\\n\\r\\n    /// @notice Allow any user to execute the proposal if it is in the execution stage\\r\\n    /// @param _proposalId the index of the proposal we wish to execute\\r\\n    /// @return bytes array the executed function/s returned\\r\\n    function execute(uint256 _proposalId) public payable nonReentrant returns (bytes[] memory) {\\r\\n        require(\\r\\n            state(_proposalId) == ProposalState.ReadyForExecution,\\r\\n            \\\"Governance::execute: cannot be executed\\\"\\r\\n        );\\r\\n\\r\\n        Proposal storage proposal = proposals[_proposalId];\\r\\n\\r\\n        ProposalExecutionContextList storage proposalExecution = proposal.executionContexts;\\r\\n\\r\\n        bytes[] memory returnDatas;\\r\\n\\r\\n        // If yes/no options were given, execute all\\r\\n        if (proposal.isBoolean) {\\r\\n            returnDatas = new bytes[](proposalExecution.length);\\r\\n            for (uint256 i = 0; i < proposalExecution.length; ++i) {\\r\\n                (bool success, bytes memory returnData) = proposalExecution.contexts[i].target.call{\\r\\n                                                   value: proposalExecution.contexts[i].value}(\\r\\n                                                          proposalExecution.contexts[i].data);\\r\\n                require(\\r\\n                    success,\\r\\n                    \\\"Governance::execute: transaction execution reverted.\\\"\\r\\n                );\\r\\n                returnDatas[i] = returnData;\\r\\n            }\\r\\n        } else {\\r\\n            // If multiple choice, execute the option with the most votes\\r\\n            returnDatas = new bytes[](1);\\r\\n            uint256 contextToExecute = 0;\\r\\n            uint256 maxVotes = proposal.quorumVotes;\\r\\n            for (uint256 i = 0; i < proposal.votes.length; ++i) {\\r\\n                if (proposal.votes[i] > maxVotes) {\\r\\n                    maxVotes = proposal.votes[i];\\r\\n                    contextToExecute = i;\\r\\n                }\\r\\n            }\\r\\n            (bool success, bytes memory returnData) = proposalExecution.contexts[contextToExecute].target.call{\\r\\n                                               value: proposalExecution.contexts[contextToExecute].value}(\\r\\n                                                      proposalExecution.contexts[contextToExecute].data);\\r\\n            require(\\r\\n                success,\\r\\n                \\\"Governance::execute: transaction execution reverted.\\\"\\r\\n            );\\r\\n            returnDatas[0] = returnData;\\r\\n        }\\r\\n\\r\\n        proposal.executor = msg.sender;\\r\\n\\r\\n        emit ProposalExecuted(_proposalId, proposal.executor);\\r\\n\\r\\n        return returnDatas;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x3b3cfb63db3eb2a28ece575e55030f7d9da4747c7b80366ad13ae2f0cd286035\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101ee5760003560e01c806387ce23f51161010d578063ca75960b116100a0578063ea014f481161006f578063ea014f48146105c7578063ece40cc1146105dc578063f2fde38b146105fc578063fdfd7d441461061c578063fe0d94c11461063c57600080fd5b8063ca75960b14610536578063da35c6641461054d578063e23a9a5214610563578063e4917d9f146105a757600080fd5b80638e19855e116100dc5780638e19855e146104d3578063b1c360ed146104ea578063b384abef14610500578063b58131b01461052057600080fd5b806387ce23f5146104465780638ac56a53146104735780638b2579891461048b5780638da5cb5b146104a157600080fd5b806347c66140116101855780636dedc06e116101545780636dedc06e146103e2578063715018a6146103f95780637ba456af1461040e5780637cc7b87a1461042657600080fd5b806347c66140146103715780635a1daf7314610278578063645c71511461039e57806368c67143146103b557600080fd5b806334e5e95a116101c157806334e5e95a1461028f57806338249a49146102bc5780633e4f49e6146102dc5780634178b2491461030957600080fd5b8063013cf08b146101f357806302ec8f9e1461023257806324bc1a64146102545780632e54929c14610278575b600080fd5b3480156101ff57600080fd5b5061021361020e3660046126e0565b61065c565b6040516102299a999897969594939291906127f6565b60405180910390f35b34801561023e57600080fd5b5061025261024d3660046126e0565b610983565b005b34801561026057600080fd5b5061026a60045481565b604051908152602001610229565b34801561028457600080fd5b5061026a62278d0081565b34801561029b57600080fd5b506102af6102aa3660046128dd565b610ab5565b604051610229919061299f565b3480156102c857600080fd5b506102526102d73660046126e0565b610b50565b3480156102e857600080fd5b506102fc6102f73660046126e0565b610c81565b6040516102299190612aac565b34801561031557600080fd5b50610354610324366004612aeb565b600860209081526000928352604080842090915290825290208054600182015460029092015460ff909116919083565b604080519315158452602084019290925290820152606001610229565b34801561037d57600080fd5b5061039161038c3660046126e0565b61124b565b6040516102299190612b17565b3480156103aa57600080fd5b5061026a6237b1d081565b3480156103c157600080fd5b5061026a6103d0366004612b31565b60096020526000908152604090205481565b3480156103ee57600080fd5b5061026a6201518081565b34801561040557600080fd5b506102526112b0565b34801561041a57600080fd5b5061026a6315c1754081565b34801561043257600080fd5b50610252610441366004612e59565b6112e6565b34801561045257600080fd5b50610466610461366004612ffd565b611879565b60405161022991906130c0565b34801561047f57600080fd5b5061026a630aba950081565b34801561049757600080fd5b5061026a60035481565b3480156104ad57600080fd5b506001546001600160a01b03165b6040516001600160a01b039091168152602001610229565b3480156104df57600080fd5b5061026a620186a081565b3480156104f657600080fd5b5061026a60025481565b34801561050c57600080fd5b5061025261051b3660046130d3565b611ae1565b34801561052c57600080fd5b5061026a60055481565b34801561054257600080fd5b5061026a6212750081565b34801561055957600080fd5b5061026a60065481565b34801561056f57600080fd5b5061058361057e366004612aeb565b611d38565b60408051825115158152602080840151908201529181015190820152606001610229565b3480156105b357600080fd5b506102526105c23660046126e0565b611dad565b3480156105d357600080fd5b5061026a601e81565b3480156105e857600080fd5b506102526105f73660046126e0565b611ed2565b34801561060857600080fd5b50610252610617366004612b31565b612000565b34801561062857600080fd5b50600a546104bb906001600160a01b031681565b61064f61064a3660046126e0565b61209b565b60405161022991906130f5565b60076020526000908152604090208054819061067790613157565b80601f01602080910402602001604051908101604052809291908181526020018280546106a390613157565b80156106f05780601f106106c5576101008083540402835291602001916106f0565b820191906000526020600020905b8154815290600101906020018083116106d357829003601f168201915b50505050509080600101805461070590613157565b80601f016020809104026020016040519081016040528092919081815260200182805461073190613157565b801561077e5780601f106107535761010080835404028352916020019161077e565b820191906000526020600020905b81548152906001019060200180831161076157829003601f168201915b505050506002830154600384015460048501546005860154600687015460078801546009890154604080518082018252600a8c0180548252600b8d01805484516020808302820181019096528181529d9e6001600160a01b039c8d169e9c909b169c50989a97999698959760ff909516969592949193808601939060009084015b82821015610976578382906000526020600020906004020160405180608001604052908160008201805461083290613157565b80601f016020809104026020016040519081016040528092919081815260200182805461085e90613157565b80156108ab5780601f10610880576101008083540402835291602001916108ab565b820191906000526020600020905b81548152906001019060200180831161088e57829003601f168201915b505050918352505060018201546001600160a01b03166020820152600282015460408201526003820180546060909201916108e590613157565b80601f016020809104026020016040519081016040528092919081815260200182805461091190613157565b801561095e5780601f106109335761010080835404028352916020019161095e565b820191906000526020600020905b81548152906001019060200180831161094157829003601f168201915b505050505081525050815260200190600101906107ff565b505050508152505090508a565b6001546001600160a01b031633146109b65760405162461bcd60e51b81526004016109ad90613192565b60405180910390fd5b6237b1d0811015610a175760405162461bcd60e51b815260206004820152602560248201527f476f7665726e616e63653a3a73657451756f72756d566f7465733a20544f4f5f60448201526414d350531360da1b60648201526084016109ad565b6315c17540811115610a795760405162461bcd60e51b815260206004820152602560248201527f476f7665726e616e63653a3a73657451756f72756d566f7465733a20544f4f5f6044820152644c4152474560d81b60648201526084016109ad565b60048190556040518181527f4d82feec215c8e1f4d904b7268dd6499d866a96685c31f1e394e6663715f76e1906020015b60405180910390a150565b610abd612585565b610ac5612585565b87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8801819004810282018101909252868152908790879081908401838280828437600092019190915250505050602082015260a0810193909352501515610120820152949350505050565b6001546001600160a01b03163314610b7a5760405162461bcd60e51b81526004016109ad90613192565b62015180811015610be35760405162461bcd60e51b815260206004820152602d60248201527f476f7665726e616e63653a3a7365744d696e696d756d566f74696e675065726960448201526c1bd90e881513d3d7d4d3505313609a1b60648201526084016109ad565b62278d00811115610c4c5760405162461bcd60e51b815260206004820152602d60248201527f476f7665726e616e63653a3a7365744d696e696d756d566f74696e675065726960448201526c6f643a20544f4f5f4c4152474560981b60648201526084016109ad565b60028190556040518181527ff4f36c6d71e6dce23fde1248bfb40024041297ac1665de2840339f8a6b32e54590602001610aaa565b60006006548210610ce35760405162461bcd60e51b815260206004820152602660248201527f476f7665726e616e63653a3a73746174653a20696e76616c69642070726f706f6044820152651cd85b081a5960d21b60648201526084016109ad565b60008281526007602052604080822081516101608101909252805482908290610d0b90613157565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3790613157565b8015610d845780601f10610d5957610100808354040283529160200191610d84565b820191906000526020600020905b815481529060010190602001808311610d6757829003601f168201915b50505050508152602001600182018054610d9d90613157565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc990613157565b8015610e165780601f10610deb57610100808354040283529160200191610e16565b820191906000526020600020905b815481529060010190602001808311610df957829003601f168201915b505050918352505060028201546001600160a01b0390811660208084019190915260038401549091166040808401919091526004840154606084015260058401546080840152600684015460a0840152600784015460c084015260088401805482518185028101850190935280835260e0909401939192909190830182828015610ebf57602002820191906000526020600020905b815481526020019060010190808311610eab575b5050509183525050600982015460ff161515602080830191909152604080518082018252600a850180548252600b86018054845181870281018701865281815294909601959294919385830193909260009084015b8282101561108b5783829060005260206000209060040201604051806080016040529081600082018054610f4790613157565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7390613157565b8015610fc05780601f10610f9557610100808354040283529160200191610fc0565b820191906000526020600020905b815481529060010190602001808311610fa357829003601f168201915b505050918352505060018201546001600160a01b0316602082015260028201546040820152600382018054606090920191610ffa90613157565b80601f016020809104026020016040519081016040528092919081815260200182805461102690613157565b80156110735780601f1061104857610100808354040283529160200191611073565b820191906000526020600020905b81548152906001019060200180831161105657829003601f168201915b50505050508152505081526020019060010190610f14565b5050509152505090525060a081015160808201519192506110ab916131dd565b42116110ba5750600092915050565b60608101516001600160a01b0316156110d65750600492915050565b806101200151801561115257508061010001516000815181106110fb576110fb6131f5565b602002602001015181610100015160018151811061111b5761111b6131f5565b602002602001015111158061115257508060c00151816101000151600181518110611148576111486131f5565b6020026020010151105b156111605750600192915050565b8061012001516111ce57600160005b826101000151518110156111bb578260c001518361010001518281518110611199576111996131f5565b6020026020010151106111ab57600091505b6111b48161320b565b905061116f565b5080156111cc575060019392505050565b505b8060e001518160a0015182608001516111e791906131dd565b6111f191906131dd565b4210156112015750600292915050565b621275008160e001518260a00151836080015161121e91906131dd565b61122891906131dd565b61123291906131dd565b4210156112425750600392915050565b50600592915050565b6000818152600760209081526040918290206008018054835181840281018401909452808452606093928301828280156112a457602002820191906000526020600020905b815481526020019060010190808311611290575b50505050509050919050565b6001546001600160a01b031633146112da5760405162461bcd60e51b81526004016109ad90613192565b6112e46000612533565b565b60208101515181511461135a5760405162461bcd60e51b815260206004820152603660248201527f476f7665726e616e63653a3a70726f706f73653a204d616c666f726d656420656044820152751e1958dd5d1a5bdb8818dbdb9d195e1d1cc81b1a5cdd60521b60648201526084016109ad565b6002548260a0015110156113c55760405162461bcd60e51b815260206004820152602c60248201527f476f7665726e616e63653a3a70726f706f73653a20766f74696e67207065726960448201526b1bd9081d1bdbc81cda1bdc9d60a21b60648201526084016109ad565b62278d008260a0015111156114305760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e616e63653a3a70726f706f73653a20766f74696e67207065726960448201526a6f6420746f6f206c6f6e6760a81b60648201526084016109ad565b33600090815260096020526040902054801561151657600061145182610c81565b9050600481600581111561146757611467612a96565b14806114845750600181600581111561148257611482612a96565b145b806114a05750600581600581111561149e5761149e612a96565b145b611514576040805162461bcd60e51b81526020600482015260248101919091527f476f7665726e616e63653a3a70726f706f73653a2070726f706f73657220616c60448201527f72656164792068617320612070726f706f73616c20696e2070726f677265737360648201526084016109ad565b505b600a546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561155a57600080fd5b505afa15801561156e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115929190613226565b9050600554811161160b5760405162461bcd60e51b815260206004820152603c60248201527f476f7665726e616e63653a3a70726f706f73653a2070726f706f73657220766f60448201527f7465732062656c6f772070726f706f73616c207468726573686f6c640000000060648201526084016109ad565b60608461012001516116615783516001600160401b0381111561163057611630612b4c565b604051908082528060200260200182016040528015611659578160200160208202803683370190505b509050611682565b60408051600280825260608201835290916020830190803683370190505090505b60065460009081526007602090815260409091208651805191926116ab9284929091019061260d565b5060208087015180516116c4926001850192019061260d565b506002810180546001600160a01b03199081163317909155600380830180549092169091554260048084019190915560a08801516005840155546006830155546007820155815161171e9060088301906020850190612691565b5061012086015160098201805460ff191691151591909117905560005b85518110156117f75781600a0160010186602001518281518110611761576117616131f5565b60209081029190910181015182546001810184556000938452928290208151805192946004029091019261179a9284929091019061260d565b506020828101516001830180546001600160a01b0319166001600160a01b0390921691909117905560408301516002830155606083015180516117e3926003850192019061260d565b505050806117f09061320b565b905061173b565b508451600a820155600680543360009081526009602052604081208290559061181f9061320b565b9091555060065460028201546040517f7585f467599d0f008985f231af99293be388626ac16ca59505c2f8f88969cd63926118699290916001600160a01b0390911690859061323f565b60405180910390a1505050505050565b604080518082019091526000815260606020820152878614801561189c57508584145b80156118a757508382145b6118dd5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016109ad565b60408051808201909152606060208201528881528890816001600160401b0381111561190b5761190b612b4c565b60405190808252806020026020018201604052801561197057816020015b61195d60405180608001604052806060815260200160006001600160a01b0316815260200160008152602001606081525090565b8152602001906001900390816119295790505b50602082015260005b82811015611ad257600060405180608001604052808e8e858181106119a0576119a06131f5565b90506020028101906119b291906132db565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020018c8c858181106119fe576119fe6131f5565b9050602002016020810190611a139190612b31565b6001600160a01b031681526020018a8a85818110611a3357611a336131f5565b905060200201358152602001888885818110611a5157611a516131f5565b9050602002810190611a6391906132db565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505091525060208401518051919250829184908110611ab557611ab56131f5565b60200260200101819052505080611acb9061320b565b9050611979565b509a9950505050505050505050565b60026000541415611b345760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109ad565b60026000908155611b4483610c81565b6005811115611b5557611b55612a96565b14611bad5760405162461bcd60e51b815260206004820152602260248201527f476f7665726e616e63653a3a766f74653a20766f74696e6720697320636c6f73604482015261195960f21b60648201526084016109ad565b600082815260076020908152604080832060088352818420338086529352818420600a5492516370a0823160e01b815260048101949094529093909290916001600160a01b0316906370a082319060240160206040518083038186803b158015611c1657600080fd5b505afa158015611c2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4e9190613226565b825490915060ff1615611c9857816002015483600801836001015481548110611c7957611c796131f5565b906000526020600020016000828254611c929190613321565b90915550505b80836008018581548110611cae57611cae6131f5565b906000526020600020016000828254611cc791906131dd565b9091555050815460ff19166001908117835582018490556002820181905560408051868152336020820152908101859052606081018290527f30fc966e088e5d91399acda87c233b87ed99de5ab4e137c1fbc19a3bb9a87bff9060800160405180910390a150506001600055505050565b611d5e604051806060016040528060001515815260200160008152602001600081525090565b5060009182526008602090815260408084206001600160a01b03939093168452918152918190208151606081018352815460ff1615158152600182015493810193909352600201549082015290565b6001546001600160a01b03163314611dd75760405162461bcd60e51b81526004016109ad90613192565b601e811015611e395760405162461bcd60e51b815260206004820152602860248201527f476f7665726e616e63653a3a736574457865637574696f6e44656c61793a205460448201526713d3d7d4d350531360c21b60648201526084016109ad565b62278d00811115611e9d5760405162461bcd60e51b815260206004820152602860248201527f476f7665726e616e63653a3a736574457865637574696f6e44656c61793a20546044820152674f4f5f4c4152474560c01b60648201526084016109ad565b60038190556040518181527f193d917ecb8a5c0270b102b28be14cc9ee25763c29c0b87e980a0bc65d485e7590602001610aaa565b6001546001600160a01b03163314611efc5760405162461bcd60e51b81526004016109ad90613192565b620186a0811015611f635760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e616e63653a3a73657450726f706f73616c5468726573686f6c6460448201526a0e881513d3d7d4d350531360aa1b60648201526084016109ad565b630aba9500811115611fcb5760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e616e63653a3a73657450726f706f73616c5468726573686f6c6460448201526a3a20544f4f5f4c4152474560a81b60648201526084016109ad565b60058190556040518181527f0553c1e1d490599cc62884d38bddf3b538bf26581e3d5a830cb2aa0a54fc563390602001610aaa565b6001546001600160a01b0316331461202a5760405162461bcd60e51b81526004016109ad90613192565b6001600160a01b03811661208f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109ad565b61209881612533565b50565b6060600260005414156120f05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109ad565b6002600055600361210083610c81565b600581111561211157612111612a96565b1461216e5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e616e63653a3a657865637574653a2063616e6e6f7420626520656044820152661e1958dd5d195960ca1b60648201526084016109ad565b60008281526007602052604090206009810154600a82019060609060ff161561231a5781546001600160401b038111156121aa576121aa612b4c565b6040519080825280602002602001820160405280156121dd57816020015b60608152602001906001900390816121c85790505b50905060005b825481101561231457600080846001018381548110612204576122046131f5565b60009182526020909120600160049092020181015490860180546001600160a01b03909216918590811061223a5761223a6131f5565b906000526020600020906004020160020154866001018581548110612261576122616131f5565b906000526020600020906004020160030160405161227f9190613338565b60006040518083038185875af1925050503d80600081146122bc576040519150601f19603f3d011682016040523d82523d6000602084013e6122c1565b606091505b5091509150816122e35760405162461bcd60e51b81526004016109ad906133aa565b808484815181106122f6576122f66131f5565b602002602001018190525050508061230d9061320b565b90506121e3565b506124d5565b60408051600180825281830190925290816020015b606081526020019060019003908161232f5750506006840154909150600090815b60088601548110156123b95781866008018281548110612372576123726131f5565b906000526020600020015411156123a957856008018181548110612398576123986131f5565b906000526020600020015491508092505b6123b28161320b565b9050612350565b506000808560010184815481106123d2576123d26131f5565b60009182526020909120600160049092020181015490870180546001600160a01b039092169186908110612408576124086131f5565b90600052602060002090600402016002015487600101868154811061242f5761242f6131f5565b906000526020600020906004020160030160405161244d9190613338565b60006040518083038185875af1925050503d806000811461248a576040519150601f19603f3d011682016040523d82523d6000602084013e61248f565b606091505b5091509150816124b15760405162461bcd60e51b81526004016109ad906133aa565b80856000815181106124c5576124c56131f5565b6020026020010181905250505050505b6003830180546001600160a01b031916339081179091556040805187815260208101929092527f9c85b616f29fca57a17eafe71cf9ff82ffef41766e2cf01ea7f8f7878dd3ec24910160405180910390a16001600055949350505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604051806101600160405280606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160608152602001600015158152602001612608604051806040016040528060008152602001606081525090565b905290565b82805461261990613157565b90600052602060002090601f01602090048101928261263b5760008555612681565b82601f1061265457805160ff1916838001178555612681565b82800160010185558215612681579182015b82811115612681578251825591602001919060010190612666565b5061268d9291506126cb565b5090565b8280548282559060005260206000209081019282156126815791602002820182811115612681578251825591602001919060010190612666565b5b8082111561268d57600081556001016126cc565b6000602082840312156126f257600080fd5b5035919050565b6000815180845260005b8181101561271f57602081850181015186830182015201612703565b81811115612731576000602083870101525b50601f01601f19169290920160200192915050565b60006040808401835185526020808501518382880152828151808552606094508489019150848160051b8a0101848401935060005b828110156127e857605f198b83030184528451608081518185526127a1828601826126f9565b838a01516001600160a01b0316868b01528b8401518c870152928a01518584038b8701529291506127d4905081836126f9565b96880196958801959350505060010161277b565b509998505050505050505050565b600061014080835261280a8184018e6126f9565b9050828103602084015261281e818d6126f9565b6001600160a01b038c811660408601528b166060850152608084018a905260a0840189905260c0840188905260e08401879052851515610100850152838103610120850152905061286f8185612746565b9d9c50505050505050505050505050565b60008083601f84011261289257600080fd5b5081356001600160401b038111156128a957600080fd5b6020830191508360208285010111156128c157600080fd5b9250929050565b803580151581146128d857600080fd5b919050565b600080600080600080608087890312156128f657600080fd5b86356001600160401b038082111561290d57600080fd5b6129198a838b01612880565b9098509650602089013591508082111561293257600080fd5b5061293f89828a01612880565b90955093505060408701359150612958606088016128c8565b90509295509295509295565b600081518084526020808501945080840160005b8381101561299457815187529582019590820190600101612978565b509495945050505050565b60208152600082516101608060208501526129be6101808501836126f9565b91506020850151601f19808685030160408701526129dc84836126f9565b9350604087015191506129fa60608701836001600160a01b03169052565b60608701516001600160a01b03811660808801529150608087015160a087015260a087015160c087015260c087015160e087015260e08701519150610100828188015280880151925050610120818786030181880152612a5a8584612964565b945080880151925050610140612a738188018415159052565b870151868503909101838701529050612a8c8382612746565b9695505050505050565b634e487b7160e01b600052602160045260246000fd5b6020810160068310612ace57634e487b7160e01b600052602160045260246000fd5b91905290565b80356001600160a01b03811681146128d857600080fd5b60008060408385031215612afe57600080fd5b82359150612b0e60208401612ad4565b90509250929050565b602081526000612b2a6020830184612964565b9392505050565b600060208284031215612b4357600080fd5b612b2a82612ad4565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715612b8457612b84612b4c565b60405290565b604051608081016001600160401b0381118282101715612b8457612b84612b4c565b60405161016081016001600160401b0381118282101715612b8457612b84612b4c565b604051601f8201601f191681016001600160401b0381118282101715612bf757612bf7612b4c565b604052919050565b60006001600160401b03831115612c1857612c18612b4c565b612c2b601f8401601f1916602001612bcf565b9050828152838383011115612c3f57600080fd5b828260208301376000602084830101529392505050565b600082601f830112612c6757600080fd5b612b2a83833560208501612bff565b60006001600160401b03821115612c8f57612c8f612b4c565b5060051b60200190565b600082601f830112612caa57600080fd5b81356020612cbf612cba83612c76565b612bcf565b82815260059290921b84018101918181019086841115612cde57600080fd5b8286015b84811015612cf95780358352918301918301612ce2565b509695505050505050565b60006040808385031215612d1757600080fd5b612d1f612b62565b9150823582526020808401356001600160401b0380821115612d4057600080fd5b818601915086601f830112612d5457600080fd5b8135612d62612cba82612c76565b81815260059190911b83018401908481019089831115612d8157600080fd5b8585015b83811015612e4657803585811115612d9d5760008081fd5b86016080818d03601f1901811315612db55760008081fd5b612dbd612b8a565b8983013588811115612dcf5760008081fd5b612ddd8f8c83870101612c56565b825250612deb8b8401612ad4565b818b01526060838101358c830152918301359188831115612e0c5760008081fd5b82840193508e603f850112612e2357600092508283fd5b612e338f8c8601358e8701612bff565b9082015285525050918601918601612d85565b5080868901525050505050505092915050565b60008060408385031215612e6c57600080fd5b82356001600160401b0380821115612e8357600080fd5b908401906101608287031215612e9857600080fd5b612ea0612bac565b823582811115612eaf57600080fd5b612ebb88828601612c56565b825250602083013582811115612ed057600080fd5b612edc88828601612c56565b602083015250612eee60408401612ad4565b6040820152612eff60608401612ad4565b60608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e08201526101008084013583811115612f4057600080fd5b612f4c89828701612c99565b828401525050610120612f608185016128c8565b908201526101408381013583811115612f7857600080fd5b612f8489828701612d04565b828401525050809450506020850135915080821115612fa257600080fd5b50612faf85828601612d04565b9150509250929050565b60008083601f840112612fcb57600080fd5b5081356001600160401b03811115612fe257600080fd5b6020830191508360208260051b85010111156128c157600080fd5b6000806000806000806000806080898b03121561301957600080fd5b88356001600160401b038082111561303057600080fd5b61303c8c838d01612fb9565b909a50985060208b013591508082111561305557600080fd5b6130618c838d01612fb9565b909850965060408b013591508082111561307a57600080fd5b6130868c838d01612fb9565b909650945060608b013591508082111561309f57600080fd5b506130ac8b828c01612fb9565b999c989b5096995094979396929594505050565b602081526000612b2a6020830184612746565b600080604083850312156130e657600080fd5b50508035926020909101359150565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561314a57603f198886030184526131388583516126f9565b9450928501929085019060010161311c565b5092979650505050505050565b600181811c9082168061316b57607f821691505b6020821081141561318c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156131f0576131f06131c7565b500190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561321f5761321f6131c7565b5060010190565b60006020828403121561323857600080fd5b5051919050565b8381526000602060018060a01b03851681840152606060408401526000845461326781613157565b8060608701526080600180841660008114613289576001811461329d576132cb565b60ff1985168984015260a0890195506132cb565b896000528660002060005b858110156132c35781548b82018601529083019088016132a8565b8a0184019650505b50939a9950505050505050505050565b6000808335601e198436030181126132f257600080fd5b8301803591506001600160401b0382111561330c57600080fd5b6020019150368190038213156128c157600080fd5b600082821015613333576133336131c7565b500390565b600080835461334681613157565b6001828116801561335e576001811461336f5761339e565b60ff1984168752828701945061339e565b8760005260208060002060005b858110156133955781548a82015290840190820161337c565b50505082870194505b50929695505050505050565b60208082526034908201527f476f7665726e616e63653a3a657865637574653a207472616e73616374696f6e6040820152731032bc32b1baba34b7b7103932bb32b93a32b21760611b60608201526080019056fea26469706673582212205516c38fb2d9664ea5266e132df0988466c0cc079d8511934da3c4294de83f9b64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "This token must not be tradeable",
        "params": {
          "_sAXIAL": "the address of the contract which determines each users voting power"
        }
      },
      "execute(uint256)": {
        "params": {
          "_proposalId": "the index of the proposal we wish to execute"
        },
        "returns": {
          "_0": "bytes array the executed function/s returned"
        }
      },
      "getReceipt(uint256,address)": {
        "params": {
          "_proposalId": "the index of the proposal we wish to view the receipt for",
          "_voter": "the user we wish to view the receipt for"
        },
        "returns": {
          "_0": "Receipt A copy of the voters selection for the provided proposal"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "propose((string,string,address,address,uint256,uint256,uint256,uint256,uint256[],bool,(uint256,(string,address,uint256,bytes)[])),(uint256,(string,address,uint256,bytes)[]))": {
        "params": {
          "_executionContexts": "Execution struct generated via constructExecutionContexts",
          "_metaData": "Metadata struct generated via constructProposalMetadata"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "state(uint256)": {
        "params": {
          "_proposalId": "the index of the proposal we wish to view the State of"
        },
        "returns": {
          "_0": "ProposalState enum representing the status of the selected proposal"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "vote(uint256,uint256)": {
        "details": "If the proposal is binary, 0 means No and 1 means Yes",
        "params": {
          "_proposalId": "the index of the proposal the user wishes to vote for or against",
          "_support": "index of the option the user wishes to cast their vote for"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "EXPIRATION_PERIOD()": {
        "notice": "Seconds since the proposal could be executed until it is considered expired"
      },
      "constructor": {
        "notice": "Constructor"
      },
      "execute(uint256)": {
        "notice": "Allow any user to execute the proposal if it is in the execution stage"
      },
      "executionDelay()": {
        "notice": "Seconds since the end of the voting period before the proposal can be executed"
      },
      "minimumVotingPeriod()": {
        "notice": "Lower bound for the voting period"
      },
      "proposalCount()": {
        "notice": "The total number of proposals"
      },
      "proposalThreshold()": {
        "notice": "The minimum number of votes required for an account to create a proposal"
      },
      "proposals(uint256)": {
        "notice": "The record of all proposals ever proposed"
      },
      "propose((string,string,address,address,uint256,uint256,uint256,uint256,uint256[],bool,(uint256,(string,address,uint256,bytes)[])),(uint256,(string,address,uint256,bytes)[]))": {
        "notice": "Allows any user with sufficient priviledges to propose a new vote"
      },
      "quorumVotes()": {
        "notice": "The required minimum number of votes in support of a proposal for it to succeed"
      },
      "sAXIAL()": {
        "notice": "Non-tradeable sAXIAL used to represent votes"
      },
      "state(uint256)": {
        "notice": "View the current status of any proposal"
      },
      "vote(uint256,uint256)": {
        "notice": "Vote for selected option"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 115,
        "contract": "contracts/Governance.sol:Governance",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 7,
        "contract": "contracts/Governance.sol:Governance",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 4984,
        "contract": "contracts/Governance.sol:Governance",
        "label": "minimumVotingPeriod",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 4994,
        "contract": "contracts/Governance.sol:Governance",
        "label": "executionDelay",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 5008,
        "contract": "contracts/Governance.sol:Governance",
        "label": "quorumVotes",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 5018,
        "contract": "contracts/Governance.sol:Governance",
        "label": "proposalThreshold",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 5027,
        "contract": "contracts/Governance.sol:Governance",
        "label": "proposalCount",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 5033,
        "contract": "contracts/Governance.sol:Governance",
        "label": "proposals",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_struct(Proposal)5073_storage)"
      },
      {
        "astId": 5040,
        "contract": "contracts/Governance.sol:Governance",
        "label": "receipts",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Receipt)5096_storage))"
      },
      {
        "astId": 5044,
        "contract": "contracts/Governance.sol:Governance",
        "label": "lastProposalByAddress",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 5048,
        "contract": "contracts/Governance.sol:Governance",
        "label": "sAXIAL",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(IsAxial)4976"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(ProposalExecutionContext)5082_storage)dyn_storage": {
        "base": "t_struct(ProposalExecutionContext)5082_storage",
        "encoding": "dynamic_array",
        "label": "struct Governance.ProposalExecutionContext[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IsAxial)4976": {
        "encoding": "inplace",
        "label": "contract IsAxial",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Receipt)5096_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Governance.Receipt)",
        "numberOfBytes": "32",
        "value": "t_struct(Receipt)5096_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_struct(Receipt)5096_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => struct Governance.Receipt))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(Receipt)5096_storage)"
      },
      "t_mapping(t_uint256,t_struct(Proposal)5073_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Governance.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)5073_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)5073_storage": {
        "encoding": "inplace",
        "label": "struct Governance.Proposal",
        "members": [
          {
            "astId": 5050,
            "contract": "contracts/Governance.sol:Governance",
            "label": "title",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 5052,
            "contract": "contracts/Governance.sol:Governance",
            "label": "metadata",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 5054,
            "contract": "contracts/Governance.sol:Governance",
            "label": "proposer",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 5056,
            "contract": "contracts/Governance.sol:Governance",
            "label": "executor",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 5058,
            "contract": "contracts/Governance.sol:Governance",
            "label": "startTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 5060,
            "contract": "contracts/Governance.sol:Governance",
            "label": "votingPeriod",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 5062,
            "contract": "contracts/Governance.sol:Governance",
            "label": "quorumVotes",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 5064,
            "contract": "contracts/Governance.sol:Governance",
            "label": "executionDelay",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 5067,
            "contract": "contracts/Governance.sol:Governance",
            "label": "votes",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 5069,
            "contract": "contracts/Governance.sol:Governance",
            "label": "isBoolean",
            "offset": 0,
            "slot": "9",
            "type": "t_bool"
          },
          {
            "astId": 5072,
            "contract": "contracts/Governance.sol:Governance",
            "label": "executionContexts",
            "offset": 0,
            "slot": "10",
            "type": "t_struct(ProposalExecutionContextList)5089_storage"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_struct(ProposalExecutionContext)5082_storage": {
        "encoding": "inplace",
        "label": "struct Governance.ProposalExecutionContext",
        "members": [
          {
            "astId": 5075,
            "contract": "contracts/Governance.sol:Governance",
            "label": "label",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 5077,
            "contract": "contracts/Governance.sol:Governance",
            "label": "target",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 5079,
            "contract": "contracts/Governance.sol:Governance",
            "label": "value",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 5081,
            "contract": "contracts/Governance.sol:Governance",
            "label": "data",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(ProposalExecutionContextList)5089_storage": {
        "encoding": "inplace",
        "label": "struct Governance.ProposalExecutionContextList",
        "members": [
          {
            "astId": 5084,
            "contract": "contracts/Governance.sol:Governance",
            "label": "length",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 5088,
            "contract": "contracts/Governance.sol:Governance",
            "label": "contexts",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_struct(ProposalExecutionContext)5082_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Receipt)5096_storage": {
        "encoding": "inplace",
        "label": "struct Governance.Receipt",
        "members": [
          {
            "astId": 5091,
            "contract": "contracts/Governance.sol:Governance",
            "label": "hasVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 5093,
            "contract": "contracts/Governance.sol:Governance",
            "label": "support",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 5095,
            "contract": "contracts/Governance.sol:Governance",
            "label": "votes",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}